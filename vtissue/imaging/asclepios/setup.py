# -*- coding: utf-8 -*-
__revision__ = "$Id: $"


import sys
import os

from setuptools import setup, find_packages

# Reads the metainfo file
from openalea.deploy.metainfo import read_metainfo
metadata = read_metainfo('metainfo.ini', verbose=True)
for key,value in metadata.iteritems():
    exec("%s = '%s'" % (key, value))


pkg_root_dir = 'src'
pkgs = [ pkg for pkg in find_packages(pkg_root_dir) if namespace not in pkg]
top_pkgs = [pkg for pkg in pkgs if  len(pkg.split('.')) < 2]
packages = [ namespace + "." + pkg for pkg in pkgs]
package_dir = dict( [('',pkg_root_dir)] + [(namespace + "." + pkg, pkg_root_dir + "/" + pkg) for pkg in top_pkgs] )

# Define global variables 
has_scons = True
if has_scons:
    build_prefix = "build-scons"
    scons_scripts=['SConstruct']
    lib_dirs = {'lib' : build_prefix+'/lib' }
    inc_dirs = { 'include' : build_prefix+'/include' }
    bin_dirs = { 'bin' : build_prefix+'/bin' }
else:
    build_prefix = None
    scons_scripts=None
    lib_dirs = None
    inc_dirs = None
    bin_dirs = None


setup_requires = ['openalea.deploy']

install_requires = []

# web sites where to find eggs
dependency_links = ['http://openalea.gforge.inria.fr/pi']


#(to be kept only if you contruct C/C++ binaries)

# To compile src of MARS-ALT

#build_prefix = "build-cmake"


###########
#
#		compile QT interfaces
#
###########

#rc_file = "src/vtissue/icons/icons.qrc"
#out_file = "src/vtissue/icons_rc.py"
#os.system("pyrcc4 -o %s %s" % (out_file,rc_file) )


# setup function call
#
setup(
    # Meta data (no edition needed if you correctly defined the variables above)
    name=name,
    version=version,
    description=description,
    long_description=long_description,
    author=authors,
    author_email=authors_email,
    url=url,
    license=license,
    keywords = '',	
    # package installation
    packages= packages,	
    package_dir= package_dir,
    # Namespace packages creation by deploy
    namespace_packages = [namespace],
    create_namespaces = True,
    # tell setup not  tocreate a zip file but install the egg as a directory (recomended to be set to False)
    zip_safe= False,
    # Dependencies
    setup_requires = setup_requires,
    install_requires = install_requires,
    dependency_links = dependency_links,


    # Binary installation (if necessary)
    # Define what to execute with scons	
    scons_scripts=scons_scripts,
    # Tell deploy where to find libs, includes and bins generated by scons.
    lib_dirs = lib_dirs,
    inc_dirs = inc_dirs,
    bin_dirs = bin_dirs,
    
    share_dirs = { 'share' : 'share' },


    # Declare scripts and wralea as entry_points (extensions) of your package 
    entry_points = { 
        'wralea' : ['vplants.asclepios = vplants.asclepios_wralea'],
        },
    )


