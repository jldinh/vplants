
# This file has been generated at Mon Jul  5 15:58:41 2010

from openalea.core import *


__name__ = 'tissue. Tutorials'

__editable__ = True
__description__ = ''
__license__ = ''
__url__ = ''
__alias__ = ['tissue._tuto']
__version__ = ''
__authors__ = ''
__institutes__ = ''
__icon__ = ''


__all__ = ['_66559952', '_66740880', '_65815568', '_66740560', 'functions_func_modify_tissue', '_66559760', '_65815504', '_66741008', 'functions_func_tool', 'functions_func_action', '_66740816', '_66559824', '_66740944', '_66559888', '_66740624', 'functions_func_diffusion', '_66559440', '_66559504', '_65815696', '_66740432', '_66559696', '_66559568', '_65815632', '_66740304', '_66740688', '_66740368']



_66559952 = CompositeNodeFactory(name='tuto05 display a mesh',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('tissue._tuto', 'tissue2D.zip'),
   3: ('tissue.view', 'mesh2D'),
   4: ('tissue.core', 'read'),
   5: ('tissue.core', 'prop'),
   6: ('tissue.core', 'topo'),
   8: ('vplants.plantgl.objects', 'Material'),
   9: ('pglviewer', 'viewer'),
   10: ('pglviewer.view', 'scene'),
   11: ('openalea.flow control', 'annotation'),
   12: ('openalea.flow control', 'annotation'),
   13: ('openalea.flow control', 'annotation'),
   14: ('openalea.flow control', 'annotation'),
   15: ('openalea.flow control', 'annotation'),
   16: ('openalea.flow control', 'annotation'),
   17: ('openalea.flow control', 'annotation')},
                             elt_connections={  13648488: (6, 1, 3, 0),
   13648512: (8, 0, 3, 3),
   13648536: (2, 0, 4, 0),
   13648560: (5, 1, 3, 1),
   13648584: (4, 0, 6, 0),
   13648608: (3, 0, 9, 0),
   13648632: (4, 0, 5, 0),
   13648656: (10, 0, 3, 6)},
                             elt_data={  2: {  'block': False,
         'caption': 'tissue2D.zip',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 115.0,
         'posy': 25.0,
         'priority': 0,
         'user_application': None},
   3: {  'block': False,
         'caption': 'mesh2D',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 261.25,
         'posy': 457.5,
         'priority': 0,
         'user_application': None,
         'user_color': (85, 170, 255)},
   4: {  'block': False,
         'caption': 'read',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 137.5,
         'posy': 100.0,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   5: {  'block': False,
         'caption': 'prop',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 245.0,
         'posy': 183.75,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   6: {  'block': False,
         'caption': 'topo',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 133.75,
         'posy': 182.5,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   8: {  'block': False,
         'caption': 'Material',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 422.5,
         'posy': 315.0,
         'priority': 0,
         'user_application': None,
         'user_color': (85, 170, 255)},
   9: {  'block': False,
         'caption': 'viewer',
         'hide': True,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 328.75,
         'posy': 572.5,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 170, 0)},
   10: {  'block': False,
          'caption': 'scene',
          'hide': True,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': 491.25,
          'posy': 392.5,
          'priority': 0,
          'user_application': None},
   11: {  'posx': 446.25, 'posy': 25.0, 'txt': 'Author: Jerome Chopard'},
   12: {  'posx': 30.0,
          'posy': 241.25,
          'txt': 'Extract the mesh\nfrom the tissue'},
   13: {  'posx': 336.25, 'posy': 190.0, 'txt': 'Read positions'},
   14: {  'posx': 608.75, 'posy': 321.25, 'txt': 'Defines a material (color)'},
   15: {  'posx': 570.0, 'posy': 401.25, 'txt': 'Create an empty scene to fill'},
   16: {  'posx': 28.75,
          'posy': 477.5,
          'txt': 'Main display algorithm\nfill a scene with geometrical\nelements representing the mesh'},
   17: {  'posx': 165.0,
          'posy': 642.5,
          'txt': 'Usage:\n    1) just run viewer to see a drawing of the wall of the tissue\n    2) change the degree of elements to display and the shrinkage\n        to 10 to see what happens'},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'user_application': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [  (0, 'PackageData(tissue._tuto, tissue2D.zip)'),
         (1, 'None'),
         (2, 'None')],
   3: [(2, '2'), (4, '10'), (5, '0')],
   4: [],
   5: [(1, "'position'")],
   6: [(1, "'mesh_id'"), (2, "'config'")],
   8: [  (0, "''"),
         (1, '(0, 0, 0)'),
         (2, '2.0'),
         (3, 'Color3(0,0,0)'),
         (4, '1.0'),
         (5, '(0, 0, 0)'),
         (6, '0.0')],
   9: [(1, '[]'), (2, 'True'), (3, 'None'), (4, "'Viewer'")],
   10: [(0, 'None')],
   11: [],
   12: [],
   13: [],
   14: [],
   15: [],
   16: [],
   17: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




_66740880 = CompositeNodeFactory(name='tuto12b use tool',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('tissue._tuto', 'tissue2D.zip'),
   3: ('tissue.view', 'mesh_view2D'),
   4: ('tissue.core', 'read'),
   5: ('tissue.core', 'prop'),
   6: ('tissue.core', 'topo'),
   8: ('vplants.plantgl.objects', 'Material'),
   9: ('pglviewer', 'viewer'),
   11: ('openalea.flow control', 'annotation'),
   12: ('openalea.flow control', 'annotation'),
   13: ('pglviewer.icons', 'elephant.png'),
   15: ('pglviewer.gui', 'tool'),
   16: ('pglviewer.gui', 'tplgui'),
   17: ('openalea.flow control', 'annotation'),
   18: ('openalea.flow control', 'annotation'),
   19: ('openalea.flow control', 'annotation'),
   20: ('openalea.flow control', 'annotation'),
   21: ('openalea.flow control', 'annotation'),
   22: ('tissue._tuto', 'func tool')},
                             elt_connections={  39576104: (8, 0, 3, 4),
   39576128: (15, 0, 16, 2),
   39576152: (2, 0, 4, 0),
   39576176: (4, 0, 5, 0),
   39576200: (3, 2, 15, 1),
   39576224: (5, 1, 3, 1),
   39576248: (16, 0, 9, 1),
   39576272: (13, 0, 15, 2),
   39576296: (4, 0, 6, 0),
   39576320: (3, 0, 9, 0),
   39576344: (6, 1, 3, 0),
   39576368: (22, 0, 15, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'tissue2D.zip',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 65.0,
         'posy': 16.25,
         'priority': 0,
         'user_application': None},
   3: {  'block': False,
         'caption': 'mesh_view2D',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 208.75,
         'posy': 452.5,
         'priority': 0,
         'user_application': None,
         'user_color': (85, 170, 255)},
   4: {  'block': False,
         'caption': 'read',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 87.5,
         'posy': 91.25,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   5: {  'block': False,
         'caption': 'prop',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 166.25,
         'posy': 176.25,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   6: {  'block': False,
         'caption': 'topo',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 83.75,
         'posy': 173.75,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   8: {  'block': False,
         'caption': 'Material',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 242.5,
         'posy': 358.75,
         'priority': 0,
         'user_application': None,
         'user_color': (85, 170, 255)},
   9: {  'block': False,
         'caption': 'viewer',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 300.0,
         'posy': 580.0,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 170, 0)},
   11: {  'posx': 390.0, 'posy': 32.5, 'txt': 'Author: Jerome Chopard'},
   12: {  'posx': 636.25,
          'posy': 196.25,
          'txt': 'Defines a function that will display elements\nwith an id to help performing the selection'},
   13: {  'block': False,
          'caption': 'elephant.png',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set([2]),
          'posx': 586.25,
          'posy': 337.5,
          'priority': 0,
          'user_application': None},
   15: {  'block': False,
          'caption': 'tool',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 481.25,
          'posy': 338.75,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 170, 0)},
   16: {  'block': False,
          'caption': 'tplgui',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 430.0,
          'posy': 486.25,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 170, 0)},
   17: {  'posx': 117.5,
          'posy': 651.25,
          'txt': 'Usage:\n    1) run viewer to see a drawing of the cell of the tissue\n    2) click on the pink elephant to start the tool\n    3) Ctrl + Left click anywhere in the viewer. A message will\n         be printed in the python interpreter saying either None\n         or the id of the selected element'},
   18: {  'posx': 725.0, 'posy': 346.25, 'txt': 'Icon for the tool'},
   19: {  'posx': 526.25, 'posy': 412.5, 'txt': 'Create a tool'},
   20: {  'posx': 562.5,
          'posy': 475.0,
          'txt': 'Create a template GUI\nused to store a list of actions and tools\nthat will be installed in the viewer'},
   21: {  'posx': 561.25,
          'posy': 87.5,
          'txt': 'Defines a function that will be called\neach time the user Ctrl + click with\nthe mouse in the viewer'},
   22: {  'block': False,
          'caption': 'func tool',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 457.5,
          'posy': 107.5,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 170, 0)},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'user_application': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [  (0, 'PackageData(tissue._tuto, tissue2D.zip)'),
         (1, 'None'),
         (2, 'None')],
   3: [(2, '2'), (3, '15'), (5, '0')],
   4: [],
   5: [(1, "'position'")],
   6: [(1, "'mesh_id'"), (2, "'config'")],
   8: [  (0, "''"),
         (1, '(0, 0, 0)'),
         (2, '2.0'),
         (3, 'Color3(0,0,0)'),
         (4, '1.0'),
         (5, '(0, 0, 0)'),
         (6, '0.0')],
   9: [(2, 'True'), (3, 'None'), (4, "'Viewer'")],
   11: [],
   12: [],
   13: [  (0, 'PackageData(pglviewer.icons, elephant.png)'),
          (1, 'None'),
          (2, 'None')],
   15: [(3, "''")],
   16: [(0, "'User'"), (1, 'None'), (3, 'True'), (4, "'left'")],
   17: [],
   18: [],
   19: [],
   20: [],
   21: [],
   22: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'connectorPosition': [114.0, 46.25],
         'position': [65.0, 16.25],
         'text': '',
         'useUserColor': False,
         'userColor': None},
   3: {  'connectorPosition': [231.02469598534066, 333.59986673329996],
         'position': [176.02469598534066, 303.59986673329996],
         'text': '',
         'useUserColor': True,
         'userColor': [85, 170, 255]},
   4: {  'connectorPosition': [111.0, 121.25],
         'position': [87.5, 91.25],
         'text': '',
         'useUserColor': True,
         'userColor': [255, 85, 0]},
   5: {  'connectorPosition': [190.25, 206.25],
         'position': [166.25, 176.25],
         'text': '',
         'useUserColor': True,
         'userColor': [255, 85, 0]},
   6: {  'connectorPosition': [115.25, 203.75],
         'position': [83.75, 173.75],
         'text': '',
         'useUserColor': True,
         'userColor': [255, 85, 0]},
   8: {  'connectorPosition': [286.00108279193739, 285.66529235382313],
         'position': [224.50108279193739, 255.66529235382313],
         'text': '',
         'useUserColor': True,
         'userColor': [85, 170, 255]},
   9: {  'connectorPosition': [346.5, 610.0],
         'position': [300.0, 580.0],
         'text': '',
         'useUserColor': True,
         'userColor': [255, 170, 0]},
   10: {  'connectorPosition': [580.0, 291.25],
          'position': [530.0, 261.25],
          'text': '',
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   11: {  'connectorPosition': [390.0, 32.5],
          'position': [390.0, 32.5],
          'text': 'Author: Jerome Chopard',
          'useUserColor': True,
          'userColor': None},
   12: {  'connectorPosition': [636.25, 196.25],
          'position': [400.0, 320.25],
          'text': 'Use the selection function provided with mesh_view',
          'useUserColor': True,
          'userColor': None},
   13: {  'connectorPosition': [642.65879560219889, 362.59120439780111],
          'position': [591.15879560219889, 332.59120439780111],
          'text': '',
          'useUserColor': False,
          'userColor': None},
   15: {  'connectorPosition': [512.06867399633529, 394.93024321172743],
          'position': [473.06867399633524, 364.93024321172743],
          'text': '',
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   16: {  'connectorPosition': [476.5, 516.25],
          'position': [430.0, 486.25],
          'text': '',
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   17: {  'connectorPosition': [117.5, 651.25],
          'position': [117.5, 651.25],
          'text': 'Usage:\n    1) run viewer to see a drawing of the cell of the tissue\n    2) click on the pink elephant to start the tool\n    3) Ctrl + Left click anywhere in the viewer. A message will\n         be printed in the python interpreter saying either None\n         or the id of the selected element',
          'useUserColor': True,
          'userColor': None},
   18: {  'connectorPosition': [725.0, 346.25],
          'position': [725.0, 346.25],
          'text': 'Icon for the tool',
          'useUserColor': True,
          'userColor': None},
   19: {  'connectorPosition': [526.25, 412.5],
          'position': [526.25, 412.5],
          'text': 'Create a tool',
          'useUserColor': True,
          'userColor': None},
   20: {  'connectorPosition': [562.5, 475.0],
          'position': [562.5, 475.0],
          'text': 'Create a template GUI\nused to store a list of actions and tools\nthat will be installed in the viewer',
          'useUserColor': True,
          'userColor': None},
   21: {  'connectorPosition': [561.25, 87.5],
          'position': [561.25, 87.5],
          'text': 'Defines a function that will be called\neach time the user Ctrl + click with\nthe mouse in the viewer',
          'useUserColor': True,
          'userColor': None},
   22: {  'connectorPosition': [495.0, 137.5],
          'position': [457.5, 107.5],
          'text': '',
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   '__in__': {  'connectorPosition': [0, 0],
                'position': [0, 0],
                'text': '',
                'useUserColor': True,
                'userColor': None},
   '__out__': {  'connectorPosition': [0, 0],
                 'position': [0, 0],
                 'text': '',
                 'useUserColor': True,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




_65815568 = CompositeNodeFactory(name='tuto06 display property',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('tissue._tuto', 'tissue2D.zip'),
   3: ('tissue.view', 'mesh2D'),
   4: ('tissue.core', 'read'),
   5: ('tissue.core', 'prop'),
   6: ('tissue.core', 'topo'),
   9: ('pglviewer', 'viewer'),
   10: ('pglviewer.view', 'scene'),
   11: ('openalea.flow control', 'annotation'),
   12: ('openalea.flow control', 'annotation'),
   13: ('openalea.flow control', 'annotation'),
   14: ('openalea.flow control', 'annotation'),
   15: ('openalea.flow control', 'annotation'),
   16: ('openalea.flow control', 'annotation'),
   17: ('openalea.flow control', 'annotation'),
   18: ('tissue.core', 'def_prop'),
   19: ('tissue.core', 'random_uniform_func'),
   20: ('openalea.flow control', 'annotation'),
   22: ('pglviewer.gui', 'cmapgui'),
   23: ('openalea.flow control', 'annotation'),
   24: ('tissue.view', 'map_mat'),
   25: ('tissue.view', 'map_jet')},
                             elt_connections={  13648344: (10, 0, 3, 6),
   13648368: (6, 1, 3, 0),
   13648392: (4, 0, 18, 0),
   13648416: (3, 0, 9, 0),
   13648440: (5, 1, 3, 1),
   13648464: (22, 0, 9, 1),
   13648488: (18, 1, 24, 0),
   13648512: (4, 0, 6, 0),
   13648536: (19, 0, 18, 2),
   13648560: (24, 0, 3, 3),
   13648584: (4, 0, 5, 0),
   13648608: (25, 0, 24, 1),
   13648632: (25, 0, 22, 1),
   13648656: (2, 0, 4, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'tissue2D.zip',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 96.25,
         'posy': 13.75,
         'priority': 0,
         'user_application': None},
   3: {  'block': False,
         'caption': 'mesh2D',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 242.5,
         'posy': 446.25,
         'priority': 0,
         'user_application': None,
         'user_color': (85, 170, 255)},
   4: {  'block': False,
         'caption': 'read',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 118.75,
         'posy': 88.75,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   5: {  'block': False,
         'caption': 'prop',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 226.25,
         'posy': 172.5,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   6: {  'block': False,
         'caption': 'topo',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 115.0,
         'posy': 171.25,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   9: {  'block': False,
         'caption': 'viewer',
         'hide': True,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 310.0,
         'posy': 561.25,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 170, 0)},
   10: {  'block': False,
          'caption': 'scene',
          'hide': True,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': 410.0,
          'posy': 395.0,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 255)},
   11: {  'posx': 422.5, 'posy': 20.0, 'txt': 'Author: Jerome Chopard'},
   12: {  'posx': 11.25,
          'posy': 230.0,
          'txt': 'Extract the mesh\nfrom the tissue'},
   13: {  'posx': 317.5,
          'posy': 178.75,
          'txt': 'Read positions\nand transform them into vectors'},
   14: {  'posx': 522.5,
          'posy': 332.5,
          'txt': 'Defines a color map for each value of the property'},
   15: {  'posx': 551.25, 'posy': 390.0, 'txt': 'Create an empty scene to fill'},
   16: {  'posx': 10.0,
          'posy': 466.25,
          'txt': 'Main display algorithm\nfill a scene with geometrical\nelements representing the mesh'},
   17: {  'posx': 147.5,
          'posy': 647.5,
          'txt': 'Usage:\n    1) just run viewer to see a drawing of the tissue with\n         cell color corresponding to the value of the property\n         ranging from dark blue 0 to red 1'},
   18: {  'block': False,
          'caption': 'def_prop',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 676.25,
          'posy': 188.75,
          'priority': 0,
          'user_application': None,
          'user_color': (170, 0, 0)},
   19: {  'block': False,
          'caption': 'random_uniform_func',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 691.25,
          'posy': 76.25,
          'priority': 0,
          'user_application': None,
          'user_color': (170, 0, 0)},
   20: {  'posx': 843.75,
          'posy': 186.25,
          'txt': 'Defines a new property\nrandomly chosen for each cell'},
   22: {  'block': False,
          'caption': 'cmapgui',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 523.75,
          'posy': 500.0,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 170, 0)},
   23: {  'posx': 627.5,
          'posy': 497.5,
          'txt': 'Add a graphical representation\nof the color map to the viewer'},
   24: {  'block': False,
          'caption': 'map_mat',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 306.25,
          'posy': 352.5,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 255)},
   25: {  'block': False,
          'caption': 'map_jet',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 403.75,
          'posy': 251.25,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 255)},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'user_application': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [  (0, 'PackageData(tissue._tuto, tissue2D.zip)'),
         (1, 'None'),
         (2, 'None')],
   3: [(2, '2'), (4, '15'), (5, '0')],
   4: [],
   5: [(1, "'position'")],
   6: [(1, "'mesh_id'"), (2, "'config'")],
   9: [(2, 'True'), (3, 'None'), (4, "'Viewer'")],
   10: [(0, 'None')],
   11: [],
   12: [],
   13: [],
   14: [],
   15: [],
   16: [],
   17: [],
   18: [(1, "'prop'"), (3, "'CELL'"), (4, "'config'"), (5, "'tmp property'")],
   19: [(0, '0.0'), (1, '1.0')],
   20: [],
   22: [(0, "'scale'"), (2, "'%.2f'")],
   23: [],
   24: [],
   25: [(0, '0.0'), (1, '1.0')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




_66740560 = CompositeNodeFactory(name='tuto02 read property',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('tissue._tuto', 'tissue1D.zip'),
   3: ('tissue.core', 'read'),
   4: ('tissue.core', 'prop'),
   5: ('openalea.python method', 'print'),
   6: ('openalea.flow control', 'annotation'),
   7: ('openalea.flow control', 'annotation'),
   8: ('openalea.flow control', 'annotation'),
   9: ('openalea.flow control', 'annotation')},
                             elt_connections={  7746800: (4, 1, 5, 0), 7746824: (3, 0, 4, 0), 7746848: (2, 0, 3, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'tissue1D.zip',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 40.0,
         'posy': 40.0,
         'priority': 0,
         'user_application': None},
   3: {  'block': False,
         'caption': 'read',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 60.0,
         'posy': 112.5,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   4: {  'block': False,
         'caption': 'prop',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 60.0,
         'posy': 192.5,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   5: {  'block': False,
         'caption': 'print',
         'hide': True,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 61.25,
         'posy': 273.75,
         'priority': 0,
         'user_application': None},
   6: {  'posx': 142.5,
         'posy': 198.75,
         'txt': 'Extract a given property from tissuedb'},
   7: {  'posx': 143.75,
         'posy': 281.25,
         'txt': 'Print the content of the property'},
   8: {  'posx': 232.5, 'posy': 71.25, 'txt': 'Author: Jerome Chopard'},
   9: {  'posx': 62.5,
         'posy': 356.25,
         'txt': "Usage:\n    1) run the dataflow. The content of the property will\n         be printed in the interpreter\n    2) You can change the name of the property in the \n         GUI of the 'prop' node. If this property is not defined\n         in the tissuedb, a KeyError will be raised. Use an 'info'\n         node to know the properties defined in the tissuedb."},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'user_application': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [  (0, 'PackageData(tissue._tuto, tissue1D.zip)'),
         (1, 'None'),
         (2, 'None')],
   3: [],
   4: [(1, "'position'")],
   5: [],
   6: [],
   7: [],
   8: [],
   9: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




functions_func_modify_tissue = Factory(name='func modify tissue',
                description='',
                category='Unclassified',
                nodemodule='functions',
                nodeclass='func_modify_tissue',
                inputs=[{'interface': None, 'name': 'tissuedb', 'desc': ''}, {'interface': IInt, 'name': 'wall_deg', 'value': 1, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'func', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




_66559760 = CompositeNodeFactory(name='tuto08 multi display',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('tissue._tuto', 'tissue2D.zip'),
   4: ('tissue.core', 'read'),
   5: ('tissue.core', 'prop'),
   6: ('tissue.core', 'topo'),
   7: ('tissue.view', 'scalar_prop_view'),
   9: ('pglviewer', 'viewer'),
   10: ('tissue.view', 'map_jet'),
   11: ('openalea.flow control', 'annotation'),
   12: ('openalea.flow control', 'annotation'),
   13: ('openalea.flow control', 'annotation'),
   14: ('openalea.flow control', 'annotation'),
   16: ('pglviewer.gui', 'viewergui'),
   17: ('openalea.flow control', 'annotation'),
   18: ('tissue.core', 'def_prop'),
   19: ('tissue.core', 'random_uniform_func'),
   20: ('openalea.flow control', 'annotation'),
   21: ('tissue.core', 'topo'),
   22: ('openalea.flow control', 'annotation'),
   23: ('tissue.view', 'map_green'),
   24: ('pglviewer', 'viewer'),
   26: ('pglviewer.gui', 'view3dgui'),
   27: ('openalea.flow control', 'annotation'),
   28: ('tissue.core', 'def_prop'),
   29: ('tissue.core', 'random_uniform_func'),
   30: ('tissue.core', 'prop'),
   32: ('pglviewer.gui', 'cmapgui'),
   33: ('pglviewer.gui', 'cmapgui'),
   34: ('tissue.view', 'scalar_prop_view')},
                             elt_connections={  13648056: (6, 1, 34, 0),
   13648080: (2, 0, 4, 0),
   13648104: (16, 0, 9, 1),
   13648128: (7, 0, 24, 0),
   13648152: (21, 0, 5, 0),
   13648176: (23, 0, 7, 5),
   13648200: (4, 0, 18, 0),
   13648224: (29, 0, 28, 2),
   13648248: (30, 1, 34, 1),
   13648272: (18, 0, 6, 0),
   13648296: (32, 0, 9, 1),
   13648320: (34, 0, 9, 0),
   13648344: (10, 0, 34, 5),
   13648368: (24, 0, 9, 3),
   13648392: (33, 0, 24, 1),
   13648416: (21, 1, 7, 0),
   13648440: (28, 0, 21, 0),
   13648464: (4, 0, 28, 0),
   13648488: (28, 1, 7, 3),
   13648512: (10, 0, 32, 1),
   13648536: (6, 0, 30, 0),
   13648560: (5, 1, 7, 1),
   13648584: (23, 0, 33, 1),
   13648608: (18, 1, 34, 3),
   13648632: (19, 0, 18, 2),
   13648656: (26, 0, 24, 1)},
                             elt_data={  2: {  'block': False,
         'caption': 'tissue2D.zip',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 95.0,
         'posy': 36.25,
         'priority': 0,
         'user_application': None},
   4: {  'block': False,
         'caption': 'read',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 117.5,
         'posy': 111.25,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   5: {  'block': False,
         'caption': 'prop',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 827.5,
         'posy': 384.16666666666669,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   6: {  'block': False,
         'caption': 'topo',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 75.0,
         'posy': 449.58333333333331,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   7: {  'block': False,
         'caption': 'scalar_prop_view',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 810.0,
         'posy': 465.0,
         'priority': 0,
         'user_application': None,
         'user_color': (85, 170, 255)},
   9: {  'block': False,
         'caption': 'viewer1',
         'hide': True,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 526.25,
         'posy': 678.75,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 170, 0)},
   10: {  'block': False,
          'caption': 'map_jet',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 267.5,
          'posy': 449.58333333333331,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 255)},
   11: {  'posx': 423.75, 'posy': 40.0, 'txt': 'Author: Jerome Chopard'},
   12: {  'posx': 492.5,
          'posy': 316.25,
          'txt': "Chain elements that\nuse the same tissuedb\ninstead of connecting all\nof them to 'read' node to\nclarify the dataflow"},
   13: {  'posx': 732.5,
          'posy': 512.5,
          'txt': 'Defines another type of\nGUI for viewer2'},
   14: {  'posx': 985.0,
          'posy': 131.25,
          'txt': 'Defines a second property\nrandomly chosen for each cell'},
   16: {  'block': False,
          'caption': 'viewergui',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 615.0,
          'posy': 596.25,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 170, 0)},
   17: {  'posx': 23.75,
          'posy': 711.25,
          'txt': 'Usage:\n    1) running viewer1 launch both viewer1 and viewer2\n         each of them display a different property\n         the GUI associated with each viewer might be different'},
   18: {  'block': False,
          'caption': 'def_prop',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 140.0,
          'posy': 266.25,
          'priority': 0,
          'user_application': None,
          'user_color': (170, 0, 0)},
   19: {  'block': False,
          'caption': 'random_uniform_func',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 165.0,
          'posy': 202.5,
          'priority': 0,
          'user_application': None,
          'user_color': (170, 0, 0)},
   20: {  'posx': 366.25,
          'posy': 195.0,
          'txt': 'Defines a first property\nrandomly chosen for\neach cell'},
   21: {  'block': False,
          'caption': 'topo',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 742.5,
          'posy': 384.16666666666669,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 85, 0)},
   22: {  'posx': 485.0,
          'posy': 568.75,
          'txt': 'Defines a first GUI for viewer1'},
   23: {  'block': False,
          'caption': 'map_green',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 927.5,
          'posy': 384.16666666666669,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 255)},
   24: {  'block': False,
          'caption': 'viewer2',
          'hide': True,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': 908.75,
          'posy': 606.25,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 170, 0)},
   26: {  'block': False,
          'caption': 'view3dgui',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 928.75,
          'posy': 531.25,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 170, 0)},
   27: {  'posx': 697.5, 'posy': 663.75, 'txt': 'Synchronize both viewers'},
   28: {  'block': False,
          'caption': 'def_prop',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 801.25,
          'posy': 193.75,
          'priority': 0,
          'user_application': None,
          'user_color': (170, 0, 0)},
   29: {  'block': False,
          'caption': 'random_uniform_func',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 778.75,
          'posy': 130.0,
          'priority': 0,
          'user_application': None,
          'user_color': (170, 0, 0)},
   30: {  'block': False,
          'caption': 'prop',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 155.0,
          'posy': 449.58333333333331,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 85, 0)},
   32: {  'block': False,
          'caption': 'cmapgui',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 515.0,
          'posy': 597.5,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 170, 0)},
   33: {  'block': False,
          'caption': 'cmapgui',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 1047.5,
          'posy': 530.0,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 170, 0)},
   34: {  'block': False,
          'caption': 'scalar_prop_view',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 150.0,
          'posy': 521.25,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 255)},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'user_application': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [  (0, 'PackageData(tissue._tuto, tissue2D.zip)'),
         (1, 'None'),
         (2, 'None')],
   4: [],
   5: [(1, "'position'")],
   6: [(1, "'mesh_id'"), (2, "'config'")],
   7: [(2, '2'), (4, '15')],
   9: [(2, 'True'), (4, "'Viewer prop1'")],
   10: [(0, '0.0'), (1, '1.0')],
   11: [],
   12: [],
   13: [],
   14: [],
   16: [],
   17: [],
   18: [(1, "'prop1'"), (3, "'CELL'"), (4, "'config'"), (5, "'tmp property'")],
   19: [(0, '0.0'), (1, '1.0')],
   20: [],
   21: [(1, "'mesh_id'"), (2, "'config'")],
   22: [],
   23: [(0, '0.0'), (1, '1.0')],
   24: [(2, 'True'), (3, 'None'), (4, "'Viewer prop2'")],
   26: [],
   27: [],
   28: [(1, "'prop2'"), (3, "'CELL'"), (4, "'config'"), (5, "'tmp property'")],
   29: [(0, '0.0'), (1, '1.0')],
   30: [(1, "'position'")],
   32: [(0, "'scale'"), (2, "'%.2f'")],
   33: [(0, "'scale'"), (2, "'%.2f'")],
   34: [(2, '2'), (4, '15')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




_65815504 = CompositeNodeFactory(name='tuto13b use scheduling',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('tissue._tuto', 'tissue2D.zip'),
   3: ('tissue.view', 'map_jet'),
   4: ('tissue.core', 'read'),
   5: ('tissue.core', 'prop'),
   6: ('tissue.core', 'topo'),
   7: ('tissue.view', 'mesh2D'),
   11: ('openalea.flow control', 'annotation'),
   13: ('openalea.image.gui', 'Animator'),
   14: ('openalea.image.gui', 'frames'),
   15: ('openalea.flow control', 'counter'),
   16: ('pglviewer', 'ViewerW2D'),
   17: ('openalea.flow control', 'annotation'),
   18: ('tissue.core', 'def_prop'),
   19: ('tissue.core', 'random_uniform_func'),
   20: ('tissue.view', 'map_mat'),
   22: ('pglviewer.gui', 'countergui'),
   23: ('pglviewer', 'ViewerW'),
   25: ('tissue._tuto', 'func diffusion'),
   26: ('tissue.core', 'topo'),
   27: ('openalea.flow control', 'annotation'),
   28: ('openalea.flow control', 'annotation'),
   29: ('openalea.flow control', 'annotation'),
   30: ('pglviewer.view', 'scene'),
   31: ('pglviewer.gui', 'cmapgui')},
                             elt_connections={  35995888: (15, 0, 14, 1),
   35995912: (23, 0, 14, 0),
   35995936: (3, 0, 31, 1),
   35995960: (30, 0, 7, 6),
   35996008: (7, 0, 23, 0),
   35996032: (4, 0, 26, 0),
   35996056: (25, 0, 20, 0),
   35996080: (4, 0, 6, 0),
   35996104: (5, 1, 7, 1),
   35996128: (4, 0, 18, 0),
   35996152: (19, 0, 18, 2),
   35996200: (6, 0, 5, 0),
   35996224: (6, 1, 7, 0),
   35996248: (18, 1, 25, 1),
   35996272: (14, 0, 13, 1),
   35996296: (20, 0, 7, 3),
   35996320: (3, 0, 20, 1),
   35996344: (22, 0, 23, 1),
   35996368: (2, 0, 4, 0),
   35996392: (31, 0, 23, 1),
   35996416: (26, 1, 25, 0),
   35996440: (7, 0, 16, 0),
   35996464: (15, 0, 22, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'tissue2D.zip',
         'delay': 0,
         'factory': '<openalea.core.data.DataFactory object at 0x3fa62d0> : "tissue2D.zip"',
         'hide': True,
         'id': 2,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 21.784483442732608,
         'posy': -316.97391860653238,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'map_jet',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x36946d0> : "map_jet"',
         'hide': True,
         'id': 3,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 440.70990016059318,
         'posy': 59.697534818985162,
         'priority': 0,
         'use_user_color': True,
         'user_application': None,
         'user_color': 85},
   4: {  'block': False,
         'caption': 'read',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x44a1b10> : "read"',
         'hide': True,
         'id': 4,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 44.284483442732551,
         'posy': -241.97391860653238,
         'priority': 0,
         'use_user_color': True,
         'user_application': None,
         'user_color': 255},
   5: {  'block': False,
         'caption': 'prop',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x44a7750> : "prop"',
         'hide': True,
         'id': 5,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 325.21211230665688,
         'posy': 111.18146753677338,
         'priority': 0,
         'use_user_color': True,
         'user_application': None,
         'user_color': 255},
   6: {  'block': False,
         'caption': 'topo',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x44a7810> : "topo"',
         'hide': True,
         'id': 6,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 246.46211230665688,
         'posy': 111.18146753677338,
         'priority': 0,
         'use_user_color': True,
         'user_application': None,
         'user_color': 255},
   7: {  'block': False,
         'caption': 'mesh2D',
         'delay': 1,
         'factory': '<openalea.core.node.NodeFactory object at 0x3694850> : "mesh2D"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 336.48427454840157,
         'posy': 171.00020509836804,
         'priority': 0,
         'use_user_color': True,
         'user_application': None,
         'user_color': 85},
   11: {  'factory': '<openalea.core.node.NodeFactory object at 0x408dbd0> : "annotation"',
          'id': 11,
          'posx': 196.92129934259265,
          'posy': -295.04605669828561,
          'txt': 'Author: Jerome Chopard'},
   13: {  'block': False,
          'caption': 'Animator',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x43e5550> : "Animator"',
          'hide': True,
          'id': 13,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 451.58796265284843,
          'posy': 539.60934520382739,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   14: {  'block': False,
          'caption': 'frames',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x43e51d0> : "frames"',
          'hide': True,
          'id': 14,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 447.76094602019731,
          'posy': 463.0690125508022,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   15: {  'block': False,
          'caption': 'counter',
          'delay': 1,
          'factory': '<openalea.core.node.NodeFactory object at 0x408dcd0> : "counter"',
          'hide': True,
          'id': 15,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 676.74249309888046,
          'posy': 78.216469051629403,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   16: {  'block': False,
          'caption': 'ViewerW2D',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x4403a50> : "ViewerW2D"',
          'hide': True,
          'id': 16,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 283.95978981787204,
          'posy': 374.07876502953201,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   17: {  'factory': '<openalea.core.node.NodeFactory object at 0x408dbd0> : "annotation"',
          'id': 17,
          'posx': 615.57489579423543,
          'posy': 383.42901467661454,
          'txt': 'Usage:\n    1) just run viewer to see a drawing of the tissue with\n         cell color corresponding to the value of the property\n         ranging from dark blue 0 to red 1\n     2) run the simulation either:\n                  - step by step (Ctrl + Enter or arrow icon)\n                  - continuously (Enter or play icon)'},
   18: {  'block': False,
          'caption': 'def_prop',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x44a7850> : "def_prop"',
          'hide': True,
          'id': 18,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 359.28448344273284,
          'posy': -178.22391860653238,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 170},
   19: {  'block': False,
          'caption': 'random_uniform_func',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x44a7950> : "random_uniform_func"',
          'hide': True,
          'id': 19,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 341.78448344273284,
          'posy': -245.72391860653238,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 170},
   20: {  'block': False,
          'caption': 'map_mat',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3694650> : "map_mat"',
          'hide': True,
          'id': 20,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 389.80691914896806,
          'posy': 112.16142484946727,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 85},
   22: {  'block': False,
          'caption': 'countergui',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x449bdd0> : "countergui"',
          'hide': True,
          'id': 22,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 611.64762475975476,
          'posy': 289.3684263029628,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 255},
   23: {  'block': False,
          'caption': 'Viewer Prop',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x4403a10> : "ViewerW"',
          'hide': True,
          'id': 23,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 387.08403384356444,
          'posy': 373.32977883389469,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   25: {  'block': False,
          'caption': 'func diffusion',
          'delay': 1,
          'factory': '<openalea.core.node.NodeFactory object at 0x3fa6110> : "func diffusion"',
          'hide': True,
          'id': 25,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 368.5130396234307,
          'posy': -34.283781679504457,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 85},
   26: {  'block': False,
          'caption': 'topo',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x44a7810> : "topo"',
          'hide': True,
          'id': 26,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 355.4777693921327,
          'posy': -92.353003793208003,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 255},
   27: {  'factory': '<openalea.core.node.NodeFactory object at 0x408dbd0> : "annotation"',
          'id': 27,
          'posx': 528.87626262626259,
          'posy': -242.72727272727252,
          'txt': 'Defines a property initialised with a random\nvalue for each cell of the tissue\n     - This property will be displayed as a color scale\n     - This property will be modified by the diffusion\n        function'},
   28: {  'factory': '<openalea.core.node.NodeFactory object at 0x408dbd0> : "annotation"',
          'id': 28,
          'posx': 499.90819209231802,
          'posy': -18.251510382835534,
          'txt': u'Defines diffusion process'},
   29: {  'factory': '<openalea.core.node.NodeFactory object at 0x408dbd0> : "annotation"',
          'id': 29,
          'posx': 515.91142484946727,
          'posy': 174.64522083501015,
          'txt': u'Defines redraw'},
   30: {  'block': False,
          'caption': 'scene',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x4403bd0> : "scene"',
          'hide': True,
          'id': 30,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 490.93607270176631,
          'posy': 112.16142484946727,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 85},
   31: {  'block': False,
          'caption': 'cmapgui',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x449bb50> : "cmapgui"',
          'hide': True,
          'id': 31,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 449.67762886392433,
          'posy': 291.22569397831427,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 255},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [  (0, 'PackageData(tissue._tuto, tissue2D.zip)'),
         (1, 'None'),
         (2, 'None')],
   3: [(0, '0.0'), (1, '1.0')],
   4: [],
   5: [(1, "'position'")],
   6: [(1, "'mesh_id'"), (2, "'config'")],
   7: [(2, '2'), (4, '10'), (5, '0'), (7, 'True')],
   11: [],
   13: [(0, '[]'), (2, '25'), (3, 'True'), (4, 'False')],
   14: [(2, "'/home/chopard/Bureau/toto'"), (3, "'frame%.4d.png'")],
   15: [(0, '0'), (1, '10'), (2, '1'), (3, 'None')],
   16: [(1, 'None')],
   17: [],
   18: [(1, "'prop'"), (3, "'CELL'"), (4, "'config'"), (5, "'tmp property'")],
   19: [(0, '0.0'), (1, '1.0')],
   20: [],
   22: [],
   23: [],
   25: [(2, '0.10000000000000001')],
   26: [(1, "'mesh_id'"), (2, "'config'")],
   27: [],
   28: [],
   29: [],
   30: [(0, 'None')],
   31: [(0, "'scale'"), (2, "'%.2f'")],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {'connectorPosition': [70.784483442732608, -286.97391860653238], 'position': [21.784483442732608, -316.97391860653238], 'userColor': None, 'useUserColor': False, 'text': ''},
   3: {'connectorPosition': [290.5, 56.600720928978419], 'position': [440.70990016059318, 59.697534818985162], 'text': '', 'useUserColor': True, 'userColor': [85, 170, 255]},
   4: {'connectorPosition': [67.784483442732551, -211.97391860653238], 'position': [44.284483442732551, -241.97391860653238], 'text': '', 'useUserColor': True, 'userColor': [255, 85, 0]},
   5: {'connectorPosition': [174.53448344273255, 56.600720928978419], 'position': [325.21211230665688, 111.18146753677338], 'text': '', 'useUserColor': True, 'userColor': [255, 85, 0]},
   6: {'connectorPosition': [103.28448344273255, 56.600720928978419], 'position': [246.46211230665688, 111.18146753677338], 'text': '', 'useUserColor': True, 'userColor': [255, 85, 0]},
   7: {'position': [336.48427454840157, 171.00020509836804], 'useUserColor': True, 'userColor': [85, 170, 255]},
   9: {  'connectorPosition': [286.91343916759843, 488.09310371655238],
         'position': [381.99425414151597, 377.18978087431378],
         'text': '',
         'useUserColor': True,
         'userColor': [255, 170, 0]},
   11: {'connectorPosition': [196.92129934259265, -295.04605669828561], 'position': [196.92129934259265, -295.04605669828561], 'userColor': None, 'useUserColor': True, 'text': 'Author: Jerome Chopard'},
   12: {  'connectorPosition': [589.37626262626259, 382.27272727272748],
          'position': [566.37626262626259, 352.27272727272748],
          'text': '',
          'useUserColor': False,
          'userColor': None},
   13: {'position': [451.58796265284843, 539.60934520382739], 'userColor': None, 'useUserColor': False},
   14: {'position': [447.76094602019731, 463.0690125508022], 'userColor': None, 'useUserColor': False},
   15: {'position': [676.74249309888046, 78.216469051629403], 'userColor': None, 'useUserColor': False},
   16: {'position': [283.95978981787204, 374.07876502953201], 'userColor': None, 'useUserColor': False},
   17: {'connectorPosition': [685.14137108008026, 276.49290899142375], 'position': [615.57489579423543, 383.42901467661454], 'userColor': None, 'useUserColor': True, 'text': 'Usage:\n    1) just run viewer to see a drawing of the tissue with\n         cell color corresponding to the value of the property\n         ranging from dark blue 0 to red 1\n     2) run the simulation either:\n                  - step by step (Ctrl + Enter or arrow icon)\n                  - continuously (Enter or play icon)'},
   18: {'connectorPosition': [413.28448344273284, -148.22391860653238], 'position': [359.28448344273284, -178.22391860653238], 'text': '', 'useUserColor': True, 'userColor': [170, 0, 0]},
   19: {'connectorPosition': [422.28448344273284, -215.72391860653238], 'position': [341.78448344273284, -245.72391860653238], 'text': '', 'useUserColor': True, 'userColor': [170, 0, 0]},
   20: {'position': [389.80691914896806, 112.16142484946727], 'useUserColor': True, 'userColor': [85, 170, 255]},
   21: {  'position': [448.89451803543835, 464.19774024119192],
          'useUserColor': False,
          'userColor': None},
   22: {'position': [611.64762475975476, 289.3684263029628], 'useUserColor': True, 'userColor': [255, 170, 0]},
   23: {'position': [387.08403384356444, 373.32977883389469], 'userColor': None, 'useUserColor': False},
   24: {  'position': [419.98843164679272, 556.01707347571335],
          'useUserColor': False,
          'userColor': None},
   25: {'connectorPosition': [688.12626262626259, 43.522727272727479], 'position': [368.5130396234307, -34.283781679504457], 'text': '', 'useUserColor': True, 'userColor': [85, 170, 0]},
   26: {'connectorPosition': [605.78448344273261, -18.223918606532379], 'position': [355.4777693921327, -92.353003793208003], 'text': '', 'useUserColor': True, 'userColor': [255, 85, 0]},
   27: {'connectorPosition': [528.87626262626259, -242.72727272727252], 'position': [528.87626262626259, -242.72727272727252], 'userColor': None, 'useUserColor': True, 'text': 'Defines a property initialised with a random\nvalue for each cell of the tissue\n     - This property will be displayed as a color scale\n     - This property will be modified by the diffusion\n        function'},
   28: {'connectorPosition': [773.87626262626259, 18.522727272727479], 'position': [499.90819209231802, -18.251510382835534], 'userColor': None, 'useUserColor': True, 'text': u'Defines diffusion process'},
   29: {'connectorPosition': [403.75, 125.0], 'position': [515.91142484946727, 174.64522083501015], 'userColor': None, 'useUserColor': True, 'text': u'Defines redraw'},
   30: {'position': [490.93607270176631, 112.16142484946727], 'useUserColor': True, 'userColor': [85, 170, 255]},
   31: {'connectorPosition': [312.0, 415.0], 'position': [449.67762886392433, 291.22569397831427], 'text': '', 'useUserColor': True, 'userColor': [255, 170, 0]},
   '__in__': {'connectorPosition': [0, 0], 'position': [0, 0], 'userColor': None, 'useUserColor': True, 'text': ''},
   '__out__': {'connectorPosition': [0, 0], 'position': [0, 0], 'userColor': None, 'useUserColor': True, 'text': ''}},
                             lazy=True,
                             eval_algo='DiscreteTimeEvaluation',
                             )




_66741008 = CompositeNodeFactory(name='tuto15 edit a property',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('tissue._tuto', 'tissue2D.zip'),
   4: ('tissue.core', 'read'),
   5: ('tissue.core', 'prop'),
   6: ('tissue.core', 'topo'),
   9: ('pglviewer', 'viewer'),
   11: ('openalea.flow control', 'annotation'),
   17: ('openalea.flow control', 'annotation'),
   18: ('tissue.core', 'def_prop'),
   21: ('tissue.view', 'scalar_prop_view'),
   22: ('pglviewer.gui', 'cmapgui'),
   23: ('tissue.edit', 'scalar_prop_edit'),
   24: ('pglviewer.gui', 'undogui'),
   25: ('tissue.view', 'map_jet')},
                             elt_connections={  29020664: (6, 0, 5, 0),
   29020688: (22, 0, 9, 1),
   29020712: (25, 0, 22, 1),
   29020736: (23, 0, 9, 1),
   29020760: (18, 1, 21, 3),
   29020784: (4, 0, 18, 0),
   29020808: (21, 0, 9, 0),
   29020832: (25, 0, 21, 5),
   29020856: (4, 0, 6, 0),
   29020880: (21, 0, 23, 0),
   29020904: (24, 0, 9, 1),
   29020928: (2, 0, 4, 0),
   29020952: (5, 1, 21, 1),
   29020976: (6, 1, 21, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'tissue2D.zip',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 96.25,
         'posy': 13.75,
         'priority': 0,
         'user_application': None},
   4: {  'block': False,
         'caption': 'read',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 118.75,
         'posy': 88.75,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   5: {  'block': False,
         'caption': 'prop',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 202.5,
         'posy': 248.75,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   6: {  'block': False,
         'caption': 'topo',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 115.0,
         'posy': 248.75,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   9: {  'block': False,
         'caption': 'viewer',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 311.25,
         'posy': 561.25,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 170, 0)},
   11: {  'posx': 422.5, 'posy': 20.0, 'txt': 'Author: Jerome Chopard'},
   17: {  'posx': 147.5,
          'posy': 647.5,
          'txt': 'Usage:\n    1) just run viewer to see a drawing of the tissue with\n         cell color corresponding to the value of the property\n         Currently, all cells have a value of 0.\n    2) Type the value you want to assign to a cell in the top bar\n        Then Ctrl+left click to assign a new value to a cell'},
   18: {  'block': False,
          'caption': 'def_prop',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 272.5,
          'posy': 248.75,
          'priority': 0,
          'user_application': None,
          'user_color': (170, 0, 0)},
   21: {  'block': False,
          'caption': 'scalar_prop_view',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 230.0,
          'posy': 386.25,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 255)},
   22: {  'block': False,
          'caption': 'cmapgui',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 520.0,
          'posy': 475.0,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 170, 0)},
   23: {  'block': False,
          'caption': 'scalar_prop_edit',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 341.25,
          'posy': 471.25,
          'priority': 0,
          'user_application': None},
   24: {  'block': False,
          'caption': 'undogui',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'priority': 0,
          'user_application': None},
   25: {  'block': False,
          'caption': 'map_jet',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 423.75,
          'posy': 248.75,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 255)},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'user_application': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [  (0, 'PackageData(tissue._tuto, tissue2D.zip)'),
         (1, 'None'),
         (2, 'None')],
   4: [],
   5: [(1, "'position'")],
   6: [(1, "'mesh_id'"), (2, "'config'")],
   9: [(2, 'True'), (3, 'None'), (4, "'Viewer'")],
   11: [],
   17: [],
   18: [  (1, "'prop'"),
          (2, '0.0'),
          (3, "'CELL'"),
          (4, "'config'"),
          (5, "'tmp property'")],
   21: [(2, '2'), (4, '15')],
   22: [(0, "'scale'"), (2, "'%.2f'")],
   23: [(1, "'float'"), (2, 'None')],
   24: [],
   25: [(0, '0.0'), (1, '1.0')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'connectorPosition': [145.25, 43.75],
         'position': [96.25, 13.75],
         'text': '',
         'useUserColor': False,
         'userColor': None},
   4: {  'connectorPosition': [142.25, 118.75],
         'position': [118.75, 88.75],
         'text': '',
         'useUserColor': True,
         'userColor': [255, 85, 0]},
   5: {  'connectorPosition': [226.5, 278.75],
         'position': [202.5, 248.75],
         'text': '',
         'useUserColor': True,
         'userColor': [255, 85, 0]},
   6: {  'connectorPosition': [146.5, 278.75],
         'position': [115.0, 248.75],
         'text': '',
         'useUserColor': True,
         'userColor': [255, 85, 0]},
   9: {  'connectorPosition': [357.75, 591.25],
         'position': [311.25, 561.25],
         'text': '',
         'useUserColor': True,
         'userColor': [255, 170, 0]},
   11: {  'connectorPosition': [422.5, 20.0],
          'position': [422.5, 20.0],
          'text': 'Author: Jerome Chopard',
          'useUserColor': True,
          'userColor': None},
   17: {  'connectorPosition': [147.5, 647.5],
          'position': [147.5, 647.5],
          'text': 'Usage:\n    1) just run viewer to see a drawing of the tissue with\n         cell color corresponding to the value of the property\n         Currently, all cells have a value of 0.\n    2) Type the value you want to assign to a cell in the top bar\n        Then Ctrl+left click to assign a new value to a cell',
          'useUserColor': True,
          'userColor': None},
   18: {  'connectorPosition': [326.5, 278.75],
          'position': [272.5, 248.75],
          'text': '',
          'useUserColor': True,
          'userColor': [170, 0, 0]},
   21: {  'connectorPosition': [295.5, 416.25],
          'position': [230.0, 386.25],
          'text': '',
          'useUserColor': True,
          'userColor': [85, 170, 255]},
   22: {  'connectorPosition': [515.625, 500.41666666666669],
          'position': [478.625, 470.41666666666669],
          'text': '',
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   23: {  'connectorPosition': [403.75, 500.41666666666669],
          'position': [341.25, 470.41666666666669],
          'text': '',
          'useUserColor': False,
          'userColor': None},
   24: {  'connectorPosition': [597.22662504002562, 500.75808517451162],
          'position': [562.22662504002562, 470.75808517451162],
          'text': '',
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   25: {  'connectorPosition': [459.25, 278.75],
          'position': [423.75, 248.75],
          'text': '',
          'useUserColor': True,
          'userColor': [85, 170, 255]},
   '__in__': {  'connectorPosition': [0, 0],
                'position': [0, 0],
                'text': '',
                'useUserColor': True,
                'userColor': None},
   '__out__': {  'connectorPosition': [0, 0],
                 'position': [0, 0],
                 'text': '',
                 'useUserColor': True,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




functions_func_tool = Factory(name='func tool',
                description='',
                category='Unclassified',
                nodemodule='functions',
                nodeclass='func_tool',
                inputs=[],
                outputs=[{'interface': None, 'name': 'func', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




functions_func_action = Factory(name='func action',
                description='',
                category='Unclassified',
                nodemodule='functions',
                nodeclass='func_action',
                inputs=[],
                outputs=[{'interface': None, 'name': 'func', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




_66740816 = CompositeNodeFactory(name='tuto04 create a property',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('tissue._tuto', 'tissue1D.zip'),
   3: ('tissue.core', 'read'),
   4: ('tissue.core', 'prop'),
   5: ('openalea.python method', 'print'),
   6: ('tissue.core', 'info'),
   7: ('tissue.core', 'def_prop'),
   8: ('openalea.python method', 'print'),
   9: ('openalea.python method', 'print'),
   10: ('tissue.core', 'def_prop'),
   11: ('tissue.core', 'random_uniform_func'),
   12: ('openalea.flow control', 'annotation'),
   13: ('openalea.flow control', 'annotation'),
   14: ('openalea.flow control', 'annotation'),
   15: ('openalea.flow control', 'annotation'),
   16: ('openalea.flow control', 'annotation')},
                             elt_connections={  7746656: (3, 0, 10, 0),
   7746680: (7, 1, 8, 0),
   7746704: (10, 1, 9, 0),
   7746728: (3, 0, 7, 0),
   7746752: (2, 0, 3, 0),
   7746776: (4, 1, 5, 0),
   7746800: (3, 0, 4, 0),
   7746824: (3, 0, 6, 0),
   7746848: (11, 0, 10, 2)},
                             elt_data={  2: {  'block': False,
         'caption': 'tissue1D.zip',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 215.0,
         'posy': 21.25,
         'priority': 0,
         'user_application': None},
   3: {  'block': False,
         'caption': 'read',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 240.0,
         'posy': 87.5,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   4: {  'block': False,
         'caption': 'prop',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 68.75,
         'posy': 378.75,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   5: {  'block': False,
         'caption': 'print 1',
         'hide': True,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 72.5,
         'posy': 441.25,
         'priority': 0,
         'user_application': None},
   6: {  'block': False,
         'caption': 'info',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 161.25,
         'posy': 170.0,
         'priority': 0,
         'user_application': None},
   7: {  'block': False,
         'caption': 'def_prop',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 408.75,
         'posy': 258.75,
         'priority': 0,
         'user_application': None,
         'user_color': (85, 170, 0)},
   8: {  'block': False,
         'caption': 'print 2',
         'hide': True,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 481.25,
         'posy': 320.0,
         'priority': 0,
         'user_application': None,
         'user_color': (85, 170, 0)},
   9: {  'block': False,
         'caption': 'print 3',
         'hide': True,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 738.75,
         'posy': 317.5,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 0, 127)},
   10: {  'block': False,
          'caption': 'def_prop',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 667.5,
          'posy': 256.25,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 0, 127)},
   11: {  'block': False,
          'caption': 'random_uniform_func',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 645.0,
          'posy': 151.25,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 0, 127)},
   12: {  'posx': 570.0, 'posy': 40.0, 'txt': 'Author: Jerome Chopard'},
   13: {  'posx': 10.0, 'posy': 503.75, 'txt': 'read a property in the tissue'},
   14: {  'posx': 326.25,
          'posy': 386.25,
          'txt': "Create the 'toto' property in the tissuedb\nwith a value fixed to 0. for each cell"},
   15: {  'posx': 681.25,
          'posy': 385.0,
          'txt': "Create the 'titi' property in the tissuedb\nwith a random value for each cell"},
   16: {  'posx': 390.0,
          'posy': 512.5,
          'txt': "Usage:\n    1) for this tutorial use mouse right click/run on separate nodes\n         to see what happen\n    2) run info, only 'position' is defined as a property of the tissue\n    3) run print1, an error occurs saying that property 'toto' is\n         not defined\n    4) run print2 to create the property\n    5) rerun print1 to see the value of the property which must\n         be the same than the one printed by print2\n    6) rerun info, 'toto' now appears as a property of the tissuedb\n    7) run print3 to create 'titi' using a random generator\n    8) rerun info, 'titi' now appears as a property of the tissuedb"},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'user_application': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [  (0, 'PackageData(tissue._tuto, tissue1D.zip)'),
         (1, 'None'),
         (2, 'None')],
   3: [],
   4: [(1, "'toto'")],
   5: [],
   6: [(1, 'True')],
   7: [(1, "'toto'"), (2, '0.0'), (3, "'CELL'"), (4, "'config'"), (5, "''")],
   8: [],
   9: [],
   10: [  (1, "'titi'"),
          (3, "'CELL'"),
          (4, "'config'"),
          (5, "'random value on cells'")],
   11: [(0, '0.0'), (1, '1.0')],
   12: [],
   13: [],
   14: [],
   15: [],
   16: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




_66559824 = CompositeNodeFactory(name='tuto10 modify and write tissue',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.data structure', 'int'),
   4: ('tissue.core', 'info'),
   7: ('openalea.flow control', 'annotation'),
   8: ('openalea.flow control', 'annotation'),
   9: ('tissue.core', 'info'),
   10: ('openalea.data structure', 'int'),
   11: ('openalea.flow control', 'annotation'),
   12: ('tissue._tuto', 'func modify tissue'),
   13: ('tissue.core', 'write'),
   14: ('openalea.flow control', 'annotation'),
   15: ('openalea.file', 'filename'),
   16: ('openalea.flow control', 'annotation'),
   17: ('openalea.flow control', 'annotation'),
   18: ('tissue.shape', 'regular grid'),
   19: ('openalea.data structure', 'int')},
                             elt_connections={  13648488: (19, 0, 18, 0),
   13648512: (12, 0, 9, 0),
   13648536: (18, 0, 4, 0),
   13648560: (15, 0, 13, 1),
   13648584: (2, 0, 18, 0),
   13648608: (10, 0, 12, 1),
   13648632: (18, 0, 12, 0),
   13648656: (12, 0, 13, 0)},
                             elt_data={  2: {  'block': False,
         'caption': '10',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 231.25,
         'posy': 118.75,
         'priority': 0,
         'user_application': None,
         'user_color': (170, 0, 0)},
   4: {  'block': False,
         'caption': 'info1',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 113.75,
         'posy': 262.5,
         'priority': 0,
         'user_application': None},
   7: {  'posx': 200.0, 'posy': 685.0, 'txt': 'Write the tissueDB in a file'},
   8: {  'posx': 381.25,
         'posy': 386.25,
         'txt': 'User defined function to modify the tissue'},
   9: {  'block': False,
         'caption': 'info2',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 123.75,
         'posy': 488.75,
         'priority': 0,
         'user_application': None},
   10: {  'block': False,
          'caption': '1',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 302.5,
          'posy': 317.5,
          'priority': 0,
          'user_application': None,
          'user_color': (0, 170, 0)},
   11: {  'posx': 603.75, 'posy': 271.25, 'txt': 'Author: Jerome Chopard'},
   12: {  'block': False,
          'caption': 'func modify tissue',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 221.25,
          'posy': 380.0,
          'priority': 0,
          'user_application': None,
          'user_color': (0, 170, 0)},
   13: {  'block': False,
          'caption': 'write',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 272.5,
          'posy': 630.0,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 85, 0)},
   14: {  'posx': 337.5,
          'posy': 72.5,
          'txt': 'Number of elements in each dimension\n    - number of nodes (1 -> 3) defines the dimension\n      of space\n    - order of nodes is important, most left one being x\n    then y then z'},
   15: {  'block': False,
          'caption': 'filename',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 337.5,
          'posy': 563.75,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 85, 0)},
   16: {  'posx': 58.75, 'posy': 196.25, 'txt': 'Create grid tissue'},
   17: {  'posx': 462.5,
          'posy': 501.25,
          'txt': "Usage:\n    1) Run info1 to see exactly what's inside\n         the tissue created by regular grid node\n    2) Run info2 to see the kind of informations\n          added by 'func modify tissue'\n    3) Choose a relevant filename\n         (usually end up by .zip but this is not mandatory)\n    4) Run write to create a tissue file. This file can be\n         used as an entry in the other tutorials"},
   18: {  'block': False,
          'caption': 'regular grid',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 230.0,
          'posy': 192.5,
          'priority': 0,
          'user_application': None,
          'user_color': (170, 0, 0)},
   19: {  'block': False,
          'caption': '2',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 287.5,
          'posy': 118.75,
          'priority': 0,
          'user_application': None,
          'user_color': (170, 0, 0)},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'user_application': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [(0, '10')],
   4: [(1, 'True')],
   7: [],
   8: [],
   9: [(1, 'True')],
   10: [(0, '1')],
   11: [],
   12: [],
   13: [],
   14: [],
   15: [(0, "'toto.zip'")],
   16: [],
   17: [],
   18: [],
   19: [(0, '2')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )



_66740944 = DataFactory(name='tissue2D.zip',
                    description='Credits: Jerome Chopard',
                    editors=None,
                    includes=None,
                    )


_66559888 = DataFactory(name='tissue1D.zip',
                    description='Credits: Jerome Chopard',
                    editors=None,
                    includes=None,
                    )



_66740624 = CompositeNodeFactory(name='tuto03 extract a topology',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('tissue._tuto', 'tissue1D.zip'),
   3: ('tissue.core', 'read'),
   4: ('tissue.core', 'topo'),
   5: ('openalea.python method', 'print'),
   6: ('openalea.flow control', 'annotation'),
   7: ('openalea.flow control', 'annotation'),
   8: ('openalea.flow control', 'annotation'),
   9: ('openalea.flow control', 'annotation')},
                             elt_connections={  7746800: (2, 0, 3, 0), 7746824: (4, 1, 5, 0), 7746848: (3, 0, 4, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'tissue1D.zip',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 37.5,
         'posy': 41.25,
         'priority': 0,
         'user_application': None},
   3: {  'block': False,
         'caption': 'read',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 61.25,
         'posy': 111.25,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   4: {  'block': False,
         'caption': 'topo',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 71.25,
         'posy': 180.0,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   5: {  'block': False,
         'caption': 'print',
         'hide': True,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 90.0,
         'posy': 250.0,
         'priority': 0,
         'user_application': None},
   6: {  'posx': 258.75, 'posy': 57.5, 'txt': 'Author: Jerome Chopard'},
   7: {  'posx': 88.75,
         'posy': 342.5,
         'txt': "Usage:\n    1) run the dataflow. The type of the topology will\n         be printed in the interpreter\n    2) You can change the name of the topology in the \n         GUI of the 'topo' node. If this topology is not defined\n         in the tissuedb, a KeyError will be raised. Use an 'info'\n         node to know the topologies defined in the tissuedb."},
   8: {  'posx': 160.0,
         'posy': 152.5,
         'txt': "Extract a given topology from tissuedb.\nThe name used to identify the topology\nis defined in a config file, whose name\nmust be given too (default 'config')"},
   9: {  'posx': 156.25, 'posy': 272.5, 'txt': 'Print the type of the topology'},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'user_application': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [  (0, 'PackageData(tissue._tuto, tissue1D.zip)'),
         (1, 'None'),
         (2, 'None')],
   3: [],
   4: [(1, "'mesh_id'"), (2, "'config'")],
   5: [],
   6: [],
   7: [],
   8: [],
   9: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




functions_func_diffusion = Factory(name='func diffusion',
                description='',
                category='Unclassified',
                nodemodule='functions',
                nodeclass='func_diffusion',
                inputs=[{'interface': None, 'name': 'mesh', 'desc': ''}, {'interface': None, 'name': 'prop', 'desc': ''}, {'interface': IFloat, 'name': 'dt', 'value': 1.0, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'prop', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




_66559440 = CompositeNodeFactory(name='tuto14 write simu result',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('tissue._tuto', 'tissue2D.zip'),
   4: ('tissue.core', 'read'),
   7: ('openalea.data structure', 'int'),
   8: ('tissue.core', 'info'),
   9: ('pglviewer', 'viewer'),
   10: ('openalea.flow control', 'X'),
   11: ('openalea.flow control', 'annotation'),
   12: ('pglviewer.view', 'loop'),
   13: ('openalea.flow control', 'rendez vous'),
   14: ('openalea.scheduler', 'task'),
   15: ('tissue.core', 'def_prop'),
   16: ('openalea.scheduler', 'scheduler'),
   17: ('openalea.flow control', 'annotation'),
   18: ('openalea.scheduler', 'call'),
   19: ('tissue.core', 'write_table'),
   20: ('tissue.core', 'name iterator'),
   21: ('pglviewer.gui', 'loopgui'),
   22: ('openalea.flow control', 'rendez vous'),
   23: ('openalea.flow control', 'X'),
   24: ('openalea.scheduler', 'task'),
   25: ('openalea.flow control', 'annotation'),
   26: ('openalea.file', 'filename'),
   27: ('tissue.core', 'write'),
   28: ('openalea.flow control', 'annotation')},
                             elt_connections={  41718120: (7, 0, 19, 2),
   41718144: (4, 0, 8, 0),
   41718168: (15, 1, 19, 3),
   41718192: (12, 0, 21, 0),
   41718216: (4, 0, 27, 0),
   41718240: (16, 0, 12, 0),
   41718264: (20, 0, 18, 0),
   41718288: (27, 0, 22, 0),
   41718312: (24, 0, 16, 0),
   41718336: (21, 0, 9, 1),
   41718360: (26, 0, 20, 0),
   41718384: (2, 0, 4, 0),
   41718408: (14, 0, 16, 0),
   41718432: (4, 0, 15, 0),
   41718456: (13, 0, 14, 0),
   41718480: (23, 0, 22, 1),
   41718504: (22, 0, 24, 0),
   41718528: (19, 0, 13, 0),
   41718552: (18, 0, 27, 1),
   41718576: (10, 0, 13, 1)},
                             elt_data={  2: {  'block': False,
         'caption': 'tissue2D.zip',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 21.784483442732608,
         'posy': -316.97391860653238,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'read',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 44.284483442732551,
         'posy': -241.97391860653238,
         'priority': 0,
         'use_user_color': True,
         'user_application': None,
         'user_color': 255},
   7: {  'block': False,
         'caption': '0',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -247.11698262427711,
         'posy': -146.47297515548061,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': 'info',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -184.21447795627927,
         'posy': -231.84066006204904,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': 'viewer',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 100.41343916759843,
         'posy': 346.84310371655238,
         'priority': 0,
         'use_user_color': True,
         'user_application': None,
         'user_color': 255},
   10: {  'block': False,
          'caption': 'X0',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -33.310440041366263,
          'posy': 6.7569639522858722,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 85},
   11: {  'posx': 196.92129934259265,
          'posy': -295.04605669828561,
          'txt': 'Author: Jerome Chopard'},
   12: {  'block': False,
          'caption': 'loop',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 110.12626262626259,
          'posy': 189.77272727272748,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   13: {  'block': False,
          'caption': 'rendez vous',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -144.56044004136601,
          'posy': 5.5069639522858722,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 85},
   14: {  'block': False,
          'caption': 'task',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -127.06044004136602,
          'posy': 59.25696395228573,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 85},
   15: {  'block': False,
          'caption': 'def_prop',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -172.53258423222258,
          'posy': -163.54651213679429,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   16: {  'block': False,
          'caption': 'scheduler',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 91.376262626262587,
          'posy': 136.02272727272737,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   17: {  'posx': 302.64137108008026,
          'posy': 150.24290899142375,
          'txt': "Usage:\n    1) Evaluate the dataflow to launch the viewer\n         with a loop GUI\n    2) Each step of simulation produce a new tissue\n         file stored in the directory specified in the\n         file template name\n    3) If you want to restart the count of tissue file to 0\n         you need explicitely rerun the 'name iterator' node"},
   18: {  'block': False,
          'caption': 'call',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': 140.0,
          'posy': -113.75,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 85},
   19: {  'block': False,
          'caption': 'write_table',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': -159.95208329862299,
          'posy': -79.07743443976868,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   20: {  'block': False,
          'caption': 'name iterator',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 171.25,
          'posy': -175.0,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 85},
   21: {  'block': False,
          'caption': 'loopgui',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 101.51639415039244,
          'posy': 278.96439391665729,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 255},
   22: {  'block': False,
          'caption': 'rendez vous',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 58.034483442732608,
          'posy': 1.7760813934676207,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 85},
   23: {  'block': False,
          'caption': 'X0',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 169.28448344273238,
          'posy': 3.0260813934676207,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 85},
   24: {  'block': False,
          'caption': 'task',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 75.534483442732608,
          'posy': 55.526081393467507,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 85},
   25: {  'posx': 402.5,
          'posy': -248.75,
          'txt': 'Defines the template for filenames\nused to store the simulation results\ne.g. simures/tissue%.4d.zip will store\nfile in simures directory with name :\n    - tissue0000.zip\n    - tissue0001.zip\n    - ...'},
   26: {  'block': False,
          'caption': 'file template name',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 236.25,
          'posy': -241.25,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   27: {  'block': False,
          'caption': 'write',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 57.5,
          'posy': -75.0,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 85},
   28: {  'posx': 248.87626262626259,
          'posy': 1.0227272727274794,
          'txt': 'Defines the write task'},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'is_in_error_state': False,
                'is_user_application': False,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'is_in_error_state': False,
                 'is_user_application': False,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [  (0, 'PackageData(tissue._tuto, tissue2D.zip)'),
         (1, 'None'),
         (2, 'None')],
   4: [],
   7: [(0, '0')],
   8: [(1, 'True')],
   9: [(0, 'None'), (2, 'True'), (3, 'None'), (4, "'Viewer'")],
   10: [(0, "'x'")],
   11: [],
   12: [],
   13: [],
   14: [(1, '1'), (2, '0'), (3, "'write table'"), (4, '0')],
   15: [  (1, "'PROP'"),
          (2, '0.0'),
          (3, "'CELL'"),
          (4, "'config'"),
          (5, "'adhoc prop'")],
   16: [],
   17: [],
   18: [],
   19: [(0, "'tototable.txt'"), (1, "'%.2f'")],
   20: [(1, '0')],
   21: [],
   22: [],
   23: [(0, "'x'")],
   24: [(1, '1'), (2, '0'), (3, "'write'"), (4, '0')],
   25: [],
   26: [(0, "'simures/tissue%.4d.zip'")],
   27: [],
   28: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [21.784483442732608, -316.97391860653238],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [44.284483442732551, -241.97391860653238],
         'useUserColor': True,
         'userColor': [255, 85, 0]},
   7: {  'position': [-247.11698262427711, -146.47297515548061],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [-184.21447795627927, -231.84066006204904],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [100.41343916759843, 346.84310371655238],
         'useUserColor': True,
         'userColor': [255, 170, 0]},
   10: {  'position': [-33.310440041366263, 6.7569639522858722],
          'useUserColor': True,
          'userColor': [85, 170, 0]},
   11: {  'position': [196.92129934259265, -295.04605669828561],
          'text': 'Author: Jerome Chopard'},
   12: {  'position': [110.12626262626259, 189.77272727272748],
          'useUserColor': False,
          'userColor': None},
   13: {  'position': [-144.56044004136601, 5.5069639522858722],
          'useUserColor': True,
          'userColor': [85, 170, 0]},
   14: {  'position': [-127.06044004136602, 59.25696395228573],
          'useUserColor': True,
          'userColor': [85, 170, 0]},
   15: {  'position': [-172.53258423222258, -163.54651213679429],
          'useUserColor': False,
          'userColor': None},
   16: {  'position': [91.376262626262587, 136.02272727272737],
          'useUserColor': False,
          'userColor': None},
   17: {  'position': [302.64137108008026, 150.24290899142375],
          'text': "Usage:\n    1) Evaluate the dataflow to launch the viewer\n         with a loop GUI\n    2) Each step of simulation produce a new tissue\n         file stored in the directory specified in the\n         file template name\n    3) If you want to restart the count of tissue file to 0\n         you need explicitely rerun the 'name iterator' node"},
   18: {  'position': [140.0, -113.75],
          'useUserColor': True,
          'userColor': [85, 170, 0]},
   19: {  'position': [-159.95208329862299, -79.07743443976868],
          'useUserColor': False,
          'userColor': None},
   20: {  'position': [171.25, -175.0],
          'useUserColor': True,
          'userColor': [85, 170, 0]},
   21: {  'position': [101.51639415039244, 278.96439391665729],
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   22: {  'position': [58.034483442732608, 1.7760813934676207],
          'useUserColor': True,
          'userColor': [85, 170, 0]},
   23: {  'position': [169.28448344273238, 3.0260813934676207],
          'useUserColor': True,
          'userColor': [85, 170, 0]},
   24: {  'position': [75.534483442732608, 55.526081393467507],
          'useUserColor': True,
          'userColor': [85, 170, 0]},
   25: {  'position': [402.5, -248.75],
          'text': 'Defines the template for filenames\nused to store the simulation results\ne.g. simures/tissue%.4d.zip will store\nfile in simures directory with name :\n    - tissue0000.zip\n    - tissue0001.zip\n    - ...'},
   26: {  'position': [236.25, -241.25],
          'useUserColor': False,
          'userColor': None},
   27: {  'position': [57.5, -75.0],
          'useUserColor': True,
          'userColor': [85, 170, 0]},
   28: {  'position': [248.87626262626259, 1.0227272727274794],
          'text': 'Defines the write task'},
   '__in__': {  'position': [20.0, 5.0],
                'useUserColor': True,
                'userColor': None},
   '__out__': {  'position': [20.0, 250.0],
                 'useUserColor': True,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




_66559504 = CompositeNodeFactory(name='tuto06c display property',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('tissue._tuto', 'tissue2D.zip'),
   4: ('tissue.core', 'read'),
   5: ('tissue.core', 'prop'),
   6: ('tissue.core', 'topo'),
   9: ('pglviewer', 'viewer'),
   11: ('openalea.flow control', 'annotation'),
   12: ('openalea.flow control', 'annotation'),
   13: ('openalea.flow control', 'annotation'),
   14: ('openalea.flow control', 'annotation'),
   15: ('openalea.flow control', 'annotation'),
   16: ('openalea.flow control', 'annotation'),
   17: ('openalea.flow control', 'annotation'),
   18: ('tissue.core', 'def_prop'),
   19: ('tissue.core', 'random_uniform_func'),
   20: ('openalea.flow control', 'annotation'),
   21: ('tissue.view', 'scalar_prop_view'),
   22: ('pglviewer.gui', 'cmapgui'),
   23: ('openalea.flow control', 'annotation'),
   25: ('tissue.view', 'map_jet')},
                             elt_connections={  13648392: (25, 0, 21, 5),
   13648416: (2, 0, 4, 0),
   13648440: (5, 1, 21, 1),
   13648464: (19, 0, 18, 2),
   13648488: (4, 0, 18, 0),
   13648512: (4, 0, 6, 0),
   13648536: (18, 1, 21, 3),
   13648560: (25, 0, 22, 1),
   13648584: (4, 0, 5, 0),
   13648608: (22, 0, 9, 1),
   13648632: (21, 0, 9, 0),
   13648656: (6, 1, 21, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'tissue2D.zip',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 96.25,
         'posy': 13.75,
         'priority': 0,
         'user_application': None},
   4: {  'block': False,
         'caption': 'read',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 118.75,
         'posy': 88.75,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   5: {  'block': False,
         'caption': 'prop',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 226.25,
         'posy': 172.5,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   6: {  'block': False,
         'caption': 'topo',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 115.0,
         'posy': 171.25,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   9: {  'block': False,
         'caption': 'viewer',
         'hide': True,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 310.0,
         'posy': 561.25,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 170, 0)},
   11: {  'posx': 422.5, 'posy': 20.0, 'txt': 'Author: Jerome Chopard'},
   12: {  'posx': 11.25,
          'posy': 230.0,
          'txt': 'Extract the mesh\nfrom the tissue'},
   13: {  'posx': 317.5,
          'posy': 178.75,
          'txt': 'Read positions\nand transform them into vectors'},
   14: {  'posx': 522.5,
          'posy': 332.5,
          'txt': 'Defines a color map for each value of the property'},
   15: {  'posx': 551.25, 'posy': 390.0, 'txt': 'Create an empty scene to fill'},
   16: {  'posx': 10.0,
          'posy': 466.25,
          'txt': 'Main display algorithm\nfill a scene with geometrical\nelements representing the mesh'},
   17: {  'posx': 147.5,
          'posy': 647.5,
          'txt': 'Usage:\n    1) just run viewer to see a drawing of the tissue with\n         cell color corresponding to the value of the property\n         ranging from dark blue 0 to red 1'},
   18: {  'block': False,
          'caption': 'def_prop',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 676.25,
          'posy': 188.75,
          'priority': 0,
          'user_application': None,
          'user_color': (170, 0, 0)},
   19: {  'block': False,
          'caption': 'random_uniform_func',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 691.25,
          'posy': 76.25,
          'priority': 0,
          'user_application': None,
          'user_color': (170, 0, 0)},
   20: {  'posx': 843.75,
          'posy': 186.25,
          'txt': 'Defines a new property\nrandomly chosen for each cell'},
   21: {  'block': False,
          'caption': 'scalar_prop_view',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 230.0,
          'posy': 386.25,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 255)},
   22: {  'block': False,
          'caption': 'cmapgui',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 523.75,
          'posy': 500.0,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 170, 0)},
   23: {  'posx': 627.5,
          'posy': 497.5,
          'txt': 'Add a graphical representation\nof the color map to the viewer'},
   25: {  'block': False,
          'caption': 'map_jet',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 403.75,
          'posy': 251.25,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 255)},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'user_application': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [  (0, 'PackageData(tissue._tuto, tissue2D.zip)'),
         (1, 'None'),
         (2, 'None')],
   4: [],
   5: [(1, "'position'")],
   6: [(1, "'mesh_id'"), (2, "'config'")],
   9: [(2, 'True'), (3, 'None'), (4, "'Viewer'")],
   11: [],
   12: [],
   13: [],
   14: [],
   15: [],
   16: [],
   17: [],
   18: [(1, "'prop'"), (3, "'CELL'"), (4, "'config'"), (5, "'tmp property'")],
   19: [(0, '0.0'), (1, '1.0')],
   20: [],
   21: [(2, '2'), (4, '15')],
   22: [(0, "'scale'"), (2, "'%.2f'")],
   23: [],
   25: [(0, '0.0'), (1, '1.0')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




_65815696 = CompositeNodeFactory(name='tuto07 chained display',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('tissue._tuto', 'tissue2D.zip'),
   4: ('tissue.core', 'read'),
   5: ('tissue.core', 'prop'),
   6: ('tissue.core', 'topo'),
   8: ('tissue.view', 'map_jet'),
   9: ('pglviewer', 'viewer'),
   10: ('tissue.view', 'scalar_prop_view'),
   11: ('openalea.flow control', 'annotation'),
   12: ('openalea.flow control', 'annotation'),
   13: ('openalea.flow control', 'annotation'),
   14: ('openalea.flow control', 'annotation'),
   15: ('tissue.view', 'mesh_view'),
   16: ('openalea.flow control', 'annotation'),
   17: ('openalea.flow control', 'annotation'),
   18: ('tissue.core', 'def_prop'),
   19: ('tissue.core', 'random_uniform_func'),
   20: ('openalea.flow control', 'annotation'),
   21: ('vplants.plantgl.objects', 'Material'),
   23: ('openalea.flow control', 'annotation'),
   24: ('openalea.flow control', 'annotation'),
   25: ('openalea.flow control', 'annotation')},
                             elt_connections={  13648344: (6, 1, 15, 0),
   13648368: (5, 1, 15, 1),
   13648392: (18, 1, 10, 3),
   13648416: (10, 0, 9, 0),
   13648440: (15, 0, 9, 0),
   13648464: (4, 0, 6, 0),
   13648488: (21, 0, 15, 4),
   13648512: (8, 0, 10, 5),
   13648536: (4, 0, 18, 0),
   13648560: (6, 1, 10, 0),
   13648584: (4, 0, 5, 0),
   13648608: (5, 1, 10, 1),
   13648632: (19, 0, 18, 2),
   13648656: (2, 0, 4, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'tissue2D.zip',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 105.0,
         'posy': 10.0,
         'priority': 0,
         'user_application': None},
   4: {  'block': False,
         'caption': 'read',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 127.5,
         'posy': 85.0,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   5: {  'block': False,
         'caption': 'prop',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 235.0,
         'posy': 167.5,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   6: {  'block': False,
         'caption': 'topo',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 123.75,
         'posy': 167.5,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   8: {  'block': False,
         'caption': 'map_jet',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 658.75,
         'posy': 341.25,
         'priority': 0,
         'user_application': None,
         'user_color': (85, 170, 255)},
   9: {  'block': False,
         'caption': 'viewer',
         'hide': True,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 345.0,
         'posy': 710.0,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 170, 0)},
   10: {  'block': False,
          'caption': 'cells view',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 440.0,
          'posy': 431.25,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 255)},
   11: {  'posx': 432.5, 'posy': 16.25, 'txt': 'Author: Jerome Chopard'},
   12: {  'posx': 20.0,
          'posy': 226.25,
          'txt': 'Extract the mesh\nfrom the tissue'},
   13: {  'posx': 326.25,
          'posy': 175.0,
          'txt': 'Read positions\nand transform them into vectors'},
   14: {  'posx': 758.75,
          'posy': 347.5,
          'txt': 'Defines a color map for each value of the property'},
   15: {  'block': False,
          'caption': 'walls view',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 258.75,
          'posy': 573.75,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 255)},
   16: {  'posx': 603.75,
          'posy': 427.5,
          'txt': 'Display algorithm\nfill a cells with a color'},
   17: {  'posx': 177.5,
          'posy': 822.5,
          'txt': 'Usage:\n    1) just run viewer to see a drawing of the tissue with\n         cell color corresponding to the value of the property\n         ranging from dark blue 0 to red 1. On top of the cells,\n         wall have been drawn.'},
   18: {  'block': False,
          'caption': 'def_prop',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 796.25,
          'posy': 180.0,
          'priority': 0,
          'user_application': None,
          'user_color': (170, 0, 0)},
   19: {  'block': False,
          'caption': 'random_uniform_func',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 811.25,
          'posy': 67.5,
          'priority': 0,
          'user_application': None,
          'user_color': (170, 0, 0)},
   20: {  'posx': 963.75,
          'posy': 177.5,
          'txt': 'Defines a new property\nrandomly chosen for each cell'},
   21: {  'block': False,
          'caption': 'Material',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 286.25,
          'posy': 507.5,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 255)},
   23: {  'posx': 500.0,
          'posy': 508.75,
          'txt': 'Defines the material (color)\nof the walls'},
   24: {  'posx': 40.0,
          'posy': 602.5,
          'txt': 'Display algorithm\ndraw walls in a given color'},
   25: {  'posx': 548.75,
          'posy': 660.0,
          'txt': 'Usage:\n    1) just run viewer to see a drawing of the tissue with\n             - cell color corresponding to the value of the property\n               ranging from dark blue 0 to red 1\n             - walls in black'},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'user_application': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [  (0, 'PackageData(tissue._tuto, tissue2D.zip)'),
         (1, 'None'),
         (2, 'None')],
   4: [],
   5: [(1, "'position'")],
   6: [(1, "'mesh_id'"), (2, "'config'")],
   8: [(0, '0.0'), (1, '1.0')],
   9: [(1, '[]'), (2, 'True'), (3, 'None'), (4, "'Viewer'")],
   10: [(2, '2'), (4, '0')],
   11: [],
   12: [],
   13: [],
   14: [],
   15: [(2, '1'), (3, '0')],
   16: [],
   17: [],
   18: [(1, "'prop'"), (3, "'CELL'"), (4, "'config'"), (5, "'tmp property'")],
   19: [(0, '0.0'), (1, '1.0')],
   20: [],
   21: [  (0, "''"),
          (1, '(0, 0, 0)'),
          (2, '2.0'),
          (3, 'Color3(0,0,0)'),
          (4, '1.0'),
          (5, '(0, 0, 0)'),
          (6, '0.0')],
   23: [],
   24: [],
   25: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




_66740432 = CompositeNodeFactory(name='info graphical chart',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('tissue._tuto', 'func tool'),
   3: ('tissue._tuto', 'func tool'),
   4: ('tissue._tuto', 'func tool'),
   5: ('tissue._tuto', 'func tool'),
   6: ('tissue._tuto', 'func tool'),
   7: ('openalea.flow control', 'annotation'),
   8: ('openalea.flow control', 'annotation'),
   9: ('openalea.flow control', 'annotation'),
   10: ('tissue._tuto', 'func tool'),
   11: ('tissue._tuto', 'func tool'),
   12: ('openalea.flow control', 'annotation')},
                             elt_connections={  },
                             elt_data={  2: {  'block': False,
         'caption': 'func tool',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 133.75,
         'posy': 107.5,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   3: {  'block': False,
         'caption': 'func tool',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 133.75,
         'posy': 171.25,
         'priority': 0,
         'user_application': None,
         'user_color': (170, 0, 0)},
   4: {  'block': False,
         'caption': 'func tool',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 135.0,
         'posy': 232.5,
         'priority': 0,
         'user_application': None,
         'user_color': (85, 170, 255)},
   5: {  'block': False,
         'caption': 'func tool',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 133.75,
         'posy': 363.75,
         'priority': 0,
         'user_application': None,
         'user_color': (0, 170, 0)},
   6: {  'block': False,
         'caption': 'func tool',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 136.25,
         'posy': 296.25,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 170, 0)},
   7: {  'posx': 243.75, 'posy': 115.0, 'txt': 'read write'},
   8: {  'posx': 238.75, 'posy': 178.75, 'txt': 'creation of elements'},
   9: {  'posx': 237.5, 'posy': 240.0, 'txt': 'draw related nodes'},
   10: {  'block': False,
          'caption': 'func tool',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 133.75,
          'posy': 428.75,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 0, 127)},
   11: {  'block': False,
          'caption': 'func tool',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 137.5,
          'posy': 490.0,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 0)},
   12: {  'posx': 238.75, 'posy': 302.5, 'txt': 'GUI related nodes'},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'user_application': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [],
   3: [],
   4: [],
   5: [],
   6: [],
   7: [],
   8: [],
   9: [],
   10: [],
   11: [],
   12: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




_66559696 = CompositeNodeFactory(name='tuto11 use action',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('tissue._tuto', 'tissue2D.zip'),
   4: ('tissue.core', 'read'),
   5: ('tissue.core', 'prop'),
   6: ('tissue.core', 'topo'),
   8: ('vplants.plantgl.objects', 'Material'),
   9: ('pglviewer', 'viewer'),
   11: ('openalea.flow control', 'annotation'),
   12: ('openalea.flow control', 'annotation'),
   13: ('tissue._tuto', 'func action'),
   14: ('pglviewer.icons', 'jellyfish.png'),
   15: ('pglviewer.gui', 'action'),
   16: ('pglviewer.gui', 'tplgui'),
   17: ('openalea.flow control', 'annotation'),
   18: ('openalea.flow control', 'annotation'),
   19: ('openalea.flow control', 'annotation'),
   20: ('openalea.flow control', 'annotation'),
   21: ('tissue.view', 'mesh_view2D')},
                             elt_connections={  13648416: (13, 0, 15, 0),
   13648440: (21, 0, 9, 0),
   13648464: (14, 0, 15, 1),
   13648488: (8, 0, 21, 4),
   13648512: (5, 1, 21, 1),
   13648536: (4, 0, 5, 0),
   13648560: (6, 1, 21, 0),
   13648584: (16, 0, 9, 1),
   13648608: (4, 0, 6, 0),
   13648632: (15, 0, 16, 1),
   13648656: (2, 0, 4, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'tissue2D.zip',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 25.0,
         'posy': 12.5,
         'priority': 0,
         'user_application': None},
   4: {  'block': False,
         'caption': 'read',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 47.5,
         'posy': 87.5,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   5: {  'block': False,
         'caption': 'prop',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 155.0,
         'posy': 171.25,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   6: {  'block': False,
         'caption': 'topo',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 43.75,
         'posy': 170.0,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   8: {  'block': False,
         'caption': 'Material',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 223.75,
         'posy': 300.0,
         'priority': 0,
         'user_application': None,
         'user_color': (85, 170, 255)},
   9: {  'block': False,
         'caption': 'viewer',
         'hide': True,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 238.75,
         'posy': 560.0,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 170, 0)},
   11: {  'posx': 312.5, 'posy': 32.5, 'txt': 'Author: Jerome Chopard'},
   12: {  'posx': 381.25,
          'posy': 147.5,
          'txt': 'Defines a function that will be called\neach time the action is activated'},
   13: {  'block': False,
          'caption': 'func action',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 485.0,
          'posy': 227.5,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 170, 0)},
   14: {  'block': False,
          'caption': 'jellyfish.png',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set([2]),
          'posx': 651.25,
          'posy': 217.5,
          'priority': 0,
          'user_application': None},
   15: {  'block': False,
          'caption': 'action',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 523.75,
          'posy': 312.5,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 170, 0)},
   16: {  'block': False,
          'caption': 'tplgui',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 477.5,
          'posy': 478.75,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 170, 0)},
   17: {  'posx': 90.0,
          'posy': 622.5,
          'txt': "Usage:\n    1) run viewer to see a drawing of the wall of the tissue\n    2) click on the jellyfish, func1 will be executed resulting\n        in 'toto' beeing printed in the python interpreter"},
   18: {  'posx': 727.5, 'posy': 271.25, 'txt': 'Icon for the action'},
   19: {  'posx': 582.5, 'posy': 361.25, 'txt': 'Create an action'},
   20: {  'posx': 598.75,
          'posy': 471.25,
          'txt': 'Create a template GUI\nused to store a list of actions and tools\nthat will be installed in the viewer'},
   21: {  'block': False,
          'caption': 'mesh_view2D',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 146.25,
          'posy': 422.5,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 255)},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'user_application': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [  (0, 'PackageData(tissue._tuto, tissue2D.zip)'),
         (1, 'None'),
         (2, 'None')],
   4: [],
   5: [(1, "'position'")],
   6: [(1, "'mesh_id'"), (2, "'config'")],
   8: [  (0, "''"),
         (1, '(0, 0, 0)'),
         (2, '2.0'),
         (3, 'Color3(0,0,0)'),
         (4, '1.0'),
         (5, '(0, 0, 0)'),
         (6, '0.0')],
   9: [(2, 'True'), (3, 'None'), (4, "'Viewer'")],
   11: [],
   12: [],
   13: [],
   14: [  (0, 'PackageData(pglviewer.icons, jellyfish.png)'),
          (1, 'None'),
          (2, 'None')],
   15: [(2, "''")],
   16: [(0, "'User'"), (2, 'None'), (3, 'True'), (4, "'left'")],
   17: [],
   18: [],
   19: [],
   20: [],
   21: [(2, '2'), (3, '10'), (5, '0')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




_66559568 = CompositeNodeFactory(name='tuto09 create grid tissue',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.data structure', 'int'),
   4: ('tissue.core', 'info'),
   5: ('tissue.core', 'prop'),
   6: ('tissue.core', 'topo'),
   7: ('tissue.shape', 'tovec'),
   8: ('vplants.plantgl.objects', 'Material'),
   9: ('pglviewer', 'viewer'),
   10: ('tissue.view', 'mesh_view2D'),
   11: ('openalea.flow control', 'annotation'),
   13: ('openalea.flow control', 'annotation'),
   14: ('openalea.flow control', 'annotation'),
   15: ('openalea.flow control', 'annotation'),
   16: ('openalea.flow control', 'annotation'),
   17: ('openalea.flow control', 'annotation'),
   18: ('tissue.shape', 'regular grid'),
   19: ('openalea.data structure', 'int')},
                             elt_connections={  13648440: (5, 1, 7, 0),
   13648464: (8, 0, 10, 4),
   13648488: (10, 0, 9, 0),
   13648512: (7, 0, 10, 1),
   13648536: (19, 0, 18, 0),
   13648560: (18, 0, 6, 0),
   13648584: (2, 0, 18, 0),
   13648608: (6, 1, 10, 0),
   13648632: (18, 0, 4, 0),
   13648656: (18, 0, 5, 0)},
                             elt_data={  2: {  'block': False,
         'caption': '10',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 231.25,
         'posy': 118.75,
         'priority': 0,
         'user_application': None,
         'user_color': (170, 0, 0)},
   4: {  'block': False,
         'caption': 'info',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 351.25,
         'posy': 252.5,
         'priority': 0,
         'user_application': None},
   5: {  'block': False,
         'caption': 'prop',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 92.5,
         'posy': 372.5,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   6: {  'block': False,
         'caption': 'topo',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 31.25,
         'posy': 435.0,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   7: {  'block': False,
         'caption': 'tovec',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 111.25,
         'posy': 433.75,
         'priority': 0,
         'user_application': None,
         'user_color': (85, 170, 255)},
   8: {  'block': False,
         'caption': 'Material',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 161.25,
         'posy': 371.25,
         'priority': 0,
         'user_application': None,
         'user_color': (85, 170, 255)},
   9: {  'block': False,
         'caption': 'viewer',
         'hide': True,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 161.25,
         'posy': 676.25,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 170, 0)},
   10: {  'block': False,
          'caption': 'mesh_view2D',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 118.75,
          'posy': 511.25,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 255)},
   11: {  'posx': 603.75, 'posy': 271.25, 'txt': 'Author: Jerome Chopard'},
   13: {  'posx': 352.5,
          'posy': 440.0,
          'txt': 'Display the mesh in the tissue\ncf. tuto05'},
   14: {  'posx': 337.5,
          'posy': 72.5,
          'txt': 'Number of elements in each dimension\n    - number of nodes (1 -> 3) defines the dimension\n      of space\n    - order of nodes is important, most left one being x\n    then y then z'},
   15: {  'posx': 313.75,
          'posy': 301.25,
          'txt': 'Read infos on what is\ninside the newly created tissue'},
   16: {  'posx': 58.75, 'posy': 196.25, 'txt': 'Create grid tissue'},
   17: {  'posx': 331.25,
          'posy': 557.5,
          'txt': 'Usage:\n    1) just run viewer to see a drawing of the wall of the tissue\n    2) change the number of elements in each dimension to see\n         the corresponding changes. You need to reevaluate the\n         dataflow each time.\n    3) you can change the number of dimensions too. Just be\n         aware that you need to reflects these changes in the display\n         nodes too'},
   18: {  'block': False,
          'caption': 'regular grid',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 230.0,
          'posy': 192.5,
          'priority': 0,
          'user_application': None,
          'user_color': (170, 0, 0)},
   19: {  'block': False,
          'caption': '2',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 287.5,
          'posy': 118.75,
          'priority': 0,
          'user_application': None,
          'user_color': (170, 0, 0)},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'user_application': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [(0, '10')],
   4: [(1, 'True')],
   5: [(1, "'position'")],
   6: [(1, "'mesh_id'"), (2, "'config'")],
   7: [(1, 'False')],
   8: [  (0, "''"),
         (1, '(0, 0, 0)'),
         (2, '2.0'),
         (3, 'Color3(0,0,0)'),
         (4, '1.0'),
         (5, '(0, 0, 0)'),
         (6, '0.0')],
   9: [(1, '[]'), (2, 'True'), (3, 'None'), (4, "'Viewer'")],
   10: [(2, '1'), (3, '0'), (5, '0')],
   11: [],
   13: [],
   14: [],
   15: [],
   16: [],
   17: [],
   18: [],
   19: [(0, '2')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




_65815632 = CompositeNodeFactory(name='tuto13 use scheduler',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('tissue._tuto', 'tissue2D.zip'),
   3: ('tissue.view', 'map_jet'),
   4: ('tissue.core', 'read'),
   5: ('tissue.core', 'prop'),
   6: ('tissue.core', 'topo'),
   7: ('tissue.view', 'scalar_prop_view'),
   9: ('pglviewer', 'viewer'),
   11: ('openalea.flow control', 'annotation'),
   12: ('pglviewer.view', 'loop'),
   15: ('openalea.scheduler', 'task'),
   16: ('openalea.scheduler', 'scheduler'),
   17: ('openalea.flow control', 'annotation'),
   18: ('tissue.core', 'def_prop'),
   19: ('tissue.core', 'random_uniform_func'),
   21: ('pglviewer.gui', 'loopgui'),
   22: ('openalea.flow control', 'rendez vous'),
   23: ('openalea.flow control', 'X'),
   24: ('openalea.scheduler', 'task'),
   25: ('tissue._tuto', 'func diffusion'),
   26: ('tissue.core', 'topo'),
   27: ('openalea.flow control', 'annotation'),
   28: ('openalea.flow control', 'annotation'),
   29: ('openalea.flow control', 'annotation'),
   31: ('pglviewer.gui', 'cmapgui')},
                             elt_connections={  30470336: (7, 0, 9, 0),
   30470384: (5, 1, 7, 1),
   30470408: (25, 0, 22, 0),
   30470432: (4, 0, 6, 0),
   30470456: (19, 0, 18, 2),
   30470480: (3, 0, 31, 1),
   30470504: (18, 1, 7, 3),
   30470528: (6, 0, 5, 0),
   30470552: (26, 1, 25, 0),
   30470576: (31, 0, 9, 1),
   30470600: (7, 1, 15, 0),
   30470624: (24, 0, 16, 0),
   30470648: (18, 1, 25, 1),
   30470672: (23, 0, 22, 1),
   30470696: (12, 0, 21, 0),
   30470720: (15, 0, 16, 0),
   30470768: (4, 0, 26, 0),
   30470792: (4, 0, 18, 0),
   30470816: (22, 0, 24, 0),
   30470840: (3, 0, 7, 5),
   30470864: (16, 0, 12, 0),
   30470888: (21, 0, 9, 1),
   30470912: (2, 0, 4, 0),
   30470960: (6, 1, 7, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'tissue2D.zip',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 21.784483442732608,
         'posy': -316.97391860653238,
         'priority': 0,
         'user_application': None},
   3: {  'block': False,
         'caption': 'map_jet',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 255.0,
         'posy': 26.600720928978415,
         'priority': 0,
         'user_application': None,
         'user_color': (85, 170, 255)},
   4: {  'block': False,
         'caption': 'read',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 44.284483442732551,
         'posy': -241.97391860653238,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   5: {  'block': False,
         'caption': 'prop',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 150.53448344273255,
         'posy': 26.600720928978415,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   6: {  'block': False,
         'caption': 'topo',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 71.784483442732551,
         'posy': 26.600720928978415,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   7: {  'block': False,
         'caption': 'scalar_prop_view',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 136.25,
         'posy': 103.75,
         'priority': 0,
         'user_application': None,
         'user_color': (85, 170, 255)},
   9: {  'block': False,
         'caption': 'viewer',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 240.41343916759843,
         'posy': 458.09310371655238,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 170, 0)},
   11: {  'posx': 196.92129934259265,
          'posy': -295.04605669828561,
          'txt': 'Author: Jerome Chopard'},
   12: {  'block': False,
          'caption': 'loop',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 566.37626262626259,
          'posy': 352.27272727272748,
          'priority': 0,
          'user_application': None},
   15: {  'block': False,
          'caption': 'task',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 353.03448344273261,
          'posy': 238.02608139346751,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 255)},
   16: {  'block': False,
          'caption': 'scheduler',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 547.62626262626259,
          'posy': 298.52272727272737,
          'priority': 0,
          'user_application': None},
   17: {  'posx': 685.14137108008026,
          'posy': 276.49290899142375,
          'txt': 'Usage:\n    1) just run viewer to see a drawing of the tissue with\n         cell color corresponding to the value of the property\n         ranging from dark blue 0 to red 1\n     2) run the simulation either:\n                  - step by step (Ctrl + Enter or arrow icon)\n                  - continuously (Enter or play icon)'},
   18: {  'block': False,
          'caption': 'def_prop',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 359.28448344273284,
          'posy': -178.22391860653238,
          'priority': 0,
          'user_application': None,
          'user_color': (170, 0, 0)},
   19: {  'block': False,
          'caption': 'random_uniform_func',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 341.78448344273284,
          'posy': -245.72391860653238,
          'priority': 0,
          'user_application': None,
          'user_color': (170, 0, 0)},
   21: {  'block': False,
          'caption': 'loopgui',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 372.76639415039244,
          'posy': 385.21439391665729,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 170, 0)},
   22: {  'block': False,
          'caption': 'rendez vous',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 718.03448344273261,
          'posy': 91.776081393467621,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 0)},
   23: {  'block': False,
          'caption': 'X0',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 829.28448344273238,
          'posy': 93.026081393467621,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 0)},
   24: {  'block': False,
          'caption': 'task',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 735.53448344273261,
          'posy': 145.52608139346751,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 0)},
   25: {  'block': False,
          'caption': 'func diffusion',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': 635.12626262626259,
          'posy': 13.522727272727479,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 0)},
   26: {  'block': False,
          'caption': 'topo',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 574.28448344273261,
          'posy': -48.223918606532379,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 85, 0)},
   27: {  'posx': 528.87626262626259,
          'posy': -242.72727272727252,
          'txt': 'Defines a property initialised with a random\nvalue for each cell of the tissue\n     - This property will be displayed as a color scale\n     - This property will be modified by the diffusion\n        function'},
   28: {  'posx': 773.87626262626259,
          'posy': 18.522727272727479,
          'txt': 'Defines the diffusion task'},
   29: {  'posx': 403.75, 'posy': 125.0, 'txt': 'Defines the redraw task'},
   31: {  'block': False,
          'caption': 'cmapgui',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 275.0,
          'posy': 385.0,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 170, 0)},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'user_application': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [  (0, 'PackageData(tissue._tuto, tissue2D.zip)'),
         (1, 'None'),
         (2, 'None')],
   3: [(0, '0.0'), (1, '1.0')],
   4: [],
   5: [(1, "'position'")],
   6: [(1, "'mesh_id'"), (2, "'config'")],
   7: [(2, '2'), (4, '0')],
   9: [(2, 'True'), (3, 'None'), (4, "'Viewer'")],
   11: [],
   12: [],
   15: [(1, '2'), (2, '0'), (3, "'display'"), (4, '0')],
   16: [],
   17: [],
   18: [(1, "'prop'"), (3, "'CELL'"), (4, "'config'"), (5, "'tmp property'")],
   19: [(0, '0.0'), (1, '1.0')],
   21: [],
   22: [],
   23: [(0, "'x'")],
   24: [(1, '1'), (2, '0'), (3, "'diffusion'"), (4, '0')],
   25: [(2, '0.10000000000000001')],
   26: [(1, "'mesh_id'"), (2, "'config'")],
   27: [],
   28: [],
   29: [],
   31: [(0, "'scale'"), (2, "'%.2f'")],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'connectorPosition': [70.784483442732608, -286.97391860653238],
         'position': [21.784483442732608, -316.97391860653238],
         'text': '',
         'useUserColor': False,
         'userColor': None},
   3: {  'connectorPosition': [290.5, 56.600720928978419],
         'position': [255.0, 26.600720928978415],
         'text': '',
         'useUserColor': True,
         'userColor': [85, 170, 255]},
   4: {  'connectorPosition': [67.784483442732551, -211.97391860653238],
         'position': [44.284483442732551, -241.97391860653238],
         'text': '',
         'useUserColor': True,
         'userColor': [255, 85, 0]},
   5: {  'connectorPosition': [174.53448344273255, 56.600720928978419],
         'position': [150.53448344273255, 26.600720928978415],
         'text': '',
         'useUserColor': True,
         'userColor': [255, 85, 0]},
   6: {  'connectorPosition': [103.28448344273255, 56.600720928978419],
         'position': [71.784483442732551, 26.600720928978415],
         'text': '',
         'useUserColor': True,
         'userColor': [255, 85, 0]},
   7: {  'connectorPosition': [201.75, 133.75],
         'position': [136.25, 103.75],
         'text': '',
         'useUserColor': True,
         'userColor': [85, 170, 255]},
   9: {  'connectorPosition': [286.91343916759843, 488.09310371655238],
         'position': [240.41343916759843, 458.09310371655238],
         'text': '',
         'useUserColor': True,
         'userColor': [255, 170, 0]},
   11: {  'connectorPosition': [196.92129934259265, -295.04605669828561],
          'position': [196.92129934259265, -295.04605669828561],
          'text': 'Author: Jerome Chopard',
          'useUserColor': True,
          'userColor': None},
   12: {  'connectorPosition': [589.37626262626259, 382.27272727272748],
          'position': [566.37626262626259, 352.27272727272748],
          'text': '',
          'useUserColor': False,
          'userColor': None},
   15: {  'connectorPosition': [399.53448344273261, 268.02608139346751],
          'position': [353.03448344273261, 238.02608139346751],
          'text': '',
          'useUserColor': True,
          'userColor': [85, 170, 255]},
   16: {  'connectorPosition': [588.12626262626259, 328.52272727272737],
          'position': [547.62626262626259, 298.52272727272737],
          'text': '',
          'useUserColor': False,
          'userColor': None},
   17: {  'connectorPosition': [685.14137108008026, 276.49290899142375],
          'position': [685.14137108008026, 276.49290899142375],
          'text': 'Usage:\n    1) just run viewer to see a drawing of the tissue with\n         cell color corresponding to the value of the property\n         ranging from dark blue 0 to red 1\n     2) run the simulation either:\n                  - step by step (Ctrl + Enter or arrow icon)\n                  - continuously (Enter or play icon)',
          'useUserColor': True,
          'userColor': None},
   18: {  'connectorPosition': [413.28448344273284, -148.22391860653238],
          'position': [359.28448344273284, -178.22391860653238],
          'text': '',
          'useUserColor': True,
          'userColor': [170, 0, 0]},
   19: {  'connectorPosition': [422.28448344273284, -215.72391860653238],
          'position': [341.78448344273284, -245.72391860653238],
          'text': '',
          'useUserColor': True,
          'userColor': [170, 0, 0]},
   21: {  'connectorPosition': [405.76639415039244, 415.21439391665729],
          'position': [372.76639415039244, 385.21439391665729],
          'text': '',
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   22: {  'connectorPosition': [766.53448344273261, 121.77608139346762],
          'position': [718.03448344273261, 91.776081393467621],
          'text': '',
          'useUserColor': True,
          'userColor': [85, 170, 0]},
   23: {  'connectorPosition': [846.78448344273238, 123.02608139346762],
          'position': [829.28448344273238, 93.026081393467621],
          'text': '',
          'useUserColor': True,
          'userColor': [85, 170, 0]},
   24: {  'connectorPosition': [782.03448344273261, 175.52608139346751],
          'position': [735.53448344273261, 145.52608139346751],
          'text': '',
          'useUserColor': True,
          'userColor': [85, 170, 0]},
   25: {  'connectorPosition': [688.12626262626259, 43.522727272727479],
          'position': [635.12626262626259, 13.522727272727479],
          'text': '',
          'useUserColor': True,
          'userColor': [85, 170, 0]},
   26: {  'connectorPosition': [605.78448344273261, -18.223918606532379],
          'position': [574.28448344273261, -48.223918606532379],
          'text': '',
          'useUserColor': True,
          'userColor': [255, 85, 0]},
   27: {  'connectorPosition': [528.87626262626259, -242.72727272727252],
          'position': [528.87626262626259, -242.72727272727252],
          'text': 'Defines a property initialised with a random\nvalue for each cell of the tissue\n     - This property will be displayed as a color scale\n     - This property will be modified by the diffusion\n        function',
          'useUserColor': True,
          'userColor': None},
   28: {  'connectorPosition': [773.87626262626259, 18.522727272727479],
          'position': [773.87626262626259, 18.522727272727479],
          'text': 'Defines the diffusion task',
          'useUserColor': True,
          'userColor': None},
   29: {  'connectorPosition': [403.75, 125.0],
          'position': [403.75, 125.0],
          'text': 'Defines the redraw task',
          'useUserColor': True,
          'userColor': None},
   31: {  'connectorPosition': [312.0, 415.0],
          'position': [275.0, 385.0],
          'text': '',
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   '__in__': {  'connectorPosition': [0, 0],
                'position': [0, 0],
                'text': '',
                'useUserColor': True,
                'userColor': None},
   '__out__': {  'connectorPosition': [0, 0],
                 'position': [0, 0],
                 'text': '',
                 'useUserColor': True,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




_66740304 = CompositeNodeFactory(name='tuto12 use tool',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('tissue._tuto', 'tissue2D.zip'),
   3: ('tissue.view', 'mesh_view2D'),
   4: ('tissue.core', 'read'),
   5: ('tissue.core', 'prop'),
   6: ('tissue.core', 'topo'),
   8: ('vplants.plantgl.objects', 'Material'),
   9: ('pglviewer', 'viewer'),
   10: ('tissue.view', 'select_mesh'),
   11: ('openalea.flow control', 'annotation'),
   12: ('openalea.flow control', 'annotation'),
   13: ('pglviewer.icons', 'elephant.png'),
   15: ('pglviewer.gui', 'tool'),
   16: ('pglviewer.gui', 'tplgui'),
   17: ('openalea.flow control', 'annotation'),
   18: ('openalea.flow control', 'annotation'),
   19: ('openalea.flow control', 'annotation'),
   20: ('openalea.flow control', 'annotation'),
   21: ('openalea.flow control', 'annotation'),
   22: ('tissue._tuto', 'func tool')},
                             elt_connections={  13648344: (3, 0, 9, 0),
   13648368: (6, 1, 10, 0),
   13648392: (5, 1, 10, 1),
   13648416: (6, 1, 3, 0),
   13648440: (15, 0, 16, 2),
   13648464: (4, 0, 5, 0),
   13648488: (22, 0, 15, 0),
   13648512: (13, 0, 15, 2),
   13648536: (4, 0, 6, 0),
   13648560: (5, 1, 3, 1),
   13648584: (2, 0, 4, 0),
   13648608: (16, 0, 9, 1),
   13648632: (8, 0, 3, 4),
   13648656: (10, 0, 15, 1)},
                             elt_data={  2: {  'block': False,
         'caption': 'tissue2D.zip',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 65.0,
         'posy': 16.25,
         'priority': 0,
         'user_application': None},
   3: {  'block': False,
         'caption': 'mesh_view2D',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 208.75,
         'posy': 452.5,
         'priority': 0,
         'user_application': None,
         'user_color': (85, 170, 255)},
   4: {  'block': False,
         'caption': 'read',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 87.5,
         'posy': 91.25,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   5: {  'block': False,
         'caption': 'prop',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 166.25,
         'posy': 176.25,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   6: {  'block': False,
         'caption': 'topo',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 83.75,
         'posy': 173.75,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   8: {  'block': False,
         'caption': 'Material',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 242.5,
         'posy': 358.75,
         'priority': 0,
         'user_application': None,
         'user_color': (85, 170, 255)},
   9: {  'block': False,
         'caption': 'viewer',
         'hide': True,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 300.0,
         'posy': 580.0,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 170, 0)},
   10: {  'block': False,
          'caption': 'select_mesh',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 530.0,
          'posy': 261.25,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 170, 0)},
   11: {  'posx': 390.0, 'posy': 32.5, 'txt': 'Author: Jerome Chopard'},
   12: {  'posx': 636.25,
          'posy': 196.25,
          'txt': 'Defines a function that will display elements\nwith an id to help performing the selection'},
   13: {  'block': False,
          'caption': 'elephant.png',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set([2]),
          'posx': 586.25,
          'posy': 337.5,
          'priority': 0,
          'user_application': None},
   15: {  'block': False,
          'caption': 'tool',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 481.25,
          'posy': 338.75,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 170, 0)},
   16: {  'block': False,
          'caption': 'tplgui',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 430.0,
          'posy': 486.25,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 170, 0)},
   17: {  'posx': 117.5,
          'posy': 651.25,
          'txt': 'Usage:\n    1) run viewer to see a drawing of the cell of the tissue\n    2) click on the pink elephant to start the tool\n    3) Ctrl + Left click anywhere in the viewer. A message will\n         be printed in the python interpreter saying either None\n         or the id of the selected element'},
   18: {  'posx': 725.0, 'posy': 346.25, 'txt': 'Icon for the tool'},
   19: {  'posx': 526.25, 'posy': 412.5, 'txt': 'Create a tool'},
   20: {  'posx': 562.5,
          'posy': 475.0,
          'txt': 'Create a template GUI\nused to store a list of actions and tools\nthat will be installed in the viewer'},
   21: {  'posx': 561.25,
          'posy': 87.5,
          'txt': 'Defines a function that will be called\neach time the user Ctrl + click with\nthe mouse in the viewer'},
   22: {  'block': False,
          'caption': 'func tool',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 457.5,
          'posy': 107.5,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 170, 0)},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'user_application': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [  (0, 'PackageData(tissue._tuto, tissue2D.zip)'),
         (1, 'None'),
         (2, 'None')],
   3: [(2, '2'), (3, '15'), (5, '0')],
   4: [],
   5: [(1, "'position'")],
   6: [(1, "'mesh_id'"), (2, "'config'")],
   8: [  (0, "''"),
         (1, '(0, 0, 0)'),
         (2, '2.0'),
         (3, 'Color3(0,0,0)'),
         (4, '1.0'),
         (5, '(0, 0, 0)'),
         (6, '0.0')],
   9: [(2, 'True'), (3, 'None'), (4, "'Viewer'")],
   10: [(2, '2')],
   11: [],
   12: [],
   13: [  (0, 'PackageData(pglviewer.icons, elephant.png)'),
          (1, 'None'),
          (2, 'None')],
   15: [(3, "''")],
   16: [(0, "'User'"), (1, 'None'), (3, 'True'), (4, "'left'")],
   17: [],
   18: [],
   19: [],
   20: [],
   21: [],
   22: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




_66740688 = CompositeNodeFactory(name='tuto01 read tissue file',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('tissue._tuto', 'tissue2D.zip'),
   3: ('tissue.core', 'read'),
   4: ('tissue.core', 'info'),
   5: ('openalea.flow control', 'annotation'),
   6: ('openalea.flow control', 'annotation'),
   7: ('openalea.flow control', 'annotation'),
   8: ('openalea.flow control', 'annotation'),
   9: ('openalea.flow control', 'annotation')},
                             elt_connections={  7746824: (3, 0, 4, 0), 7746848: (2, 0, 3, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'tissue2D.zip',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 52.5,
         'posy': 52.5,
         'priority': 0,
         'user_application': None},
   3: {  'block': False,
         'caption': 'read',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 77.5,
         'posy': 141.25,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   4: {  'block': False,
         'caption': 'info',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 83.75,
         'posy': 250.0,
         'priority': 0,
         'user_application': None},
   5: {  'posx': 180.0, 'posy': 61.25, 'txt': 'name of a tissue file'},
   6: {  'posx': 152.5,
         'posy': 147.5,
         'txt': 'Read the tissue file to extract a tissuedb'},
   7: {  'posx': 160.0, 'posy': 260.0, 'txt': 'Display info on the tissuedb'},
   8: {  'posx': 415.0, 'posy': 62.5, 'txt': 'Author: Jerome Chopard'},
   9: {  'posx': 81.25,
         'posy': 335.0,
         'txt': "Usage:\n    1) run the dataflow. A dialog widget must appear\n        filled with text information on the tissue\n    2) You can specify another tissue by removing\n         the tissue2D.zip node. When opening the GUI\n         associated with the 'read' node, a dialog will allow\n         you to choose another tissue file."},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'user_application': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [  (0, 'PackageData(tissue._tuto, tissue2D.zip)'),
         (1, 'None'),
         (2, 'None')],
   3: [],
   4: [(1, 'True')],
   5: [],
   6: [],
   7: [],
   8: [],
   9: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




_66740368 = CompositeNodeFactory(name='tuto06b display property',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('tissue._tuto', 'tissue2D.zip'),
   4: ('tissue.core', 'read'),
   5: ('tissue.core', 'prop'),
   6: ('tissue.core', 'topo'),
   9: ('pglviewer', 'viewer'),
   10: ('pglviewer.view', 'scene'),
   11: ('openalea.flow control', 'annotation'),
   12: ('openalea.flow control', 'annotation'),
   13: ('openalea.flow control', 'annotation'),
   14: ('openalea.flow control', 'annotation'),
   15: ('openalea.flow control', 'annotation'),
   16: ('openalea.flow control', 'annotation'),
   17: ('openalea.flow control', 'annotation'),
   18: ('tissue.core', 'def_prop'),
   19: ('tissue.core', 'random_uniform_func'),
   20: ('openalea.flow control', 'annotation'),
   21: ('tissue.view', 'mesh_prop2D'),
   22: ('pglviewer.gui', 'cmapgui'),
   23: ('openalea.flow control', 'annotation'),
   25: ('tissue.view', 'map_jet')},
                             elt_connections={  13648368: (2, 0, 4, 0),
   13648392: (25, 0, 22, 1),
   13648416: (22, 0, 9, 1),
   13648440: (4, 0, 6, 0),
   13648464: (5, 1, 21, 1),
   13648488: (18, 1, 21, 3),
   13648512: (6, 1, 21, 0),
   13648536: (4, 0, 5, 0),
   13648560: (25, 0, 21, 5),
   13648584: (19, 0, 18, 2),
   13648608: (10, 0, 21, 7),
   13648632: (21, 0, 9, 0),
   13648656: (4, 0, 18, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'tissue2D.zip',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 96.25,
         'posy': 13.75,
         'priority': 0,
         'user_application': None},
   4: {  'block': False,
         'caption': 'read',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 118.75,
         'posy': 88.75,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   5: {  'block': False,
         'caption': 'prop',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 226.25,
         'posy': 172.5,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   6: {  'block': False,
         'caption': 'topo',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 115.0,
         'posy': 171.25,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 85, 0)},
   9: {  'block': False,
         'caption': 'viewer',
         'hide': True,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 310.0,
         'posy': 561.25,
         'priority': 0,
         'user_application': None,
         'user_color': (255, 170, 0)},
   10: {  'block': False,
          'caption': 'scene',
          'hide': True,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': 418.75,
          'posy': 416.25,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 255)},
   11: {  'posx': 422.5, 'posy': 20.0, 'txt': 'Author: Jerome Chopard'},
   12: {  'posx': 11.25,
          'posy': 230.0,
          'txt': 'Extract the mesh\nfrom the tissue'},
   13: {  'posx': 317.5,
          'posy': 178.75,
          'txt': 'Read positions\nand transform them into vectors'},
   14: {  'posx': 522.5,
          'posy': 332.5,
          'txt': 'Defines a color map for each value of the property'},
   15: {  'posx': 551.25, 'posy': 390.0, 'txt': 'Create an empty scene to fill'},
   16: {  'posx': 10.0,
          'posy': 466.25,
          'txt': 'Main display algorithm\nfill a scene with geometrical\nelements representing the mesh'},
   17: {  'posx': 147.5,
          'posy': 647.5,
          'txt': 'Usage:\n    1) just run viewer to see a drawing of the tissue with\n         cell color corresponding to the value of the property\n         ranging from dark blue 0 to red 1'},
   18: {  'block': False,
          'caption': 'def_prop',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 676.25,
          'posy': 188.75,
          'priority': 0,
          'user_application': None,
          'user_color': (170, 0, 0)},
   19: {  'block': False,
          'caption': 'random_uniform_func',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 691.25,
          'posy': 76.25,
          'priority': 0,
          'user_application': None,
          'user_color': (170, 0, 0)},
   20: {  'posx': 843.75,
          'posy': 186.25,
          'txt': 'Defines a new property\nrandomly chosen for each cell'},
   21: {  'block': False,
          'caption': 'mesh_prop2D',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 215.0,
          'posy': 417.5,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 255)},
   22: {  'block': False,
          'caption': 'cmapgui',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 523.75,
          'posy': 500.0,
          'priority': 0,
          'user_application': None,
          'user_color': (255, 170, 0)},
   23: {  'posx': 627.5,
          'posy': 497.5,
          'txt': 'Add a graphical representation\nof the color map to the viewer'},
   25: {  'block': False,
          'caption': 'map_jet',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 403.75,
          'posy': 251.25,
          'priority': 0,
          'user_application': None,
          'user_color': (85, 170, 255)},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'user_application': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [  (0, 'PackageData(tissue._tuto, tissue2D.zip)'),
         (1, 'None'),
         (2, 'None')],
   4: [],
   5: [(1, "'position'")],
   6: [(1, "'mesh_id'"), (2, "'config'")],
   9: [(2, 'True'), (3, 'None'), (4, "'Viewer'")],
   10: [(0, 'None')],
   11: [],
   12: [],
   13: [],
   14: [],
   15: [],
   16: [],
   17: [],
   18: [(1, "'prop'"), (3, "'CELL'"), (4, "'config'"), (5, "'tmp property'")],
   19: [(0, '0.0'), (1, '1.0')],
   20: [],
   21: [(2, '2'), (4, '15'), (6, '0')],
   22: [(0, "'scale'"), (2, "'%.2f'")],
   23: [],
   25: [(0, '0.0'), (1, '1.0')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




