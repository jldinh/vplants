# -*-python-*-
from openalea.sconsx.config import platform

Import( "env" )

# 1. Call other SConscript files in sub directories
lib_env = env.Clone()
lib_env.EnableQt4Modules( [ 'QtCore', 'QtGui', 'QtOpenGL', 'QtNetwork' ])
lib_env.AppendUnique( CPPPATH = ['$QT4_CPPPATH/Qt'] )

includes= lib_env.ALEAGlob('*.h')
lib_env.ALEAIncludes( "plantgl/gui", includes )

# install headers

SConscript( 'base/SConscript', exports = { "env" : lib_env, 
                                           "platform" : platform } )
SConscript( 'viewer/SConscript', exports = { "env" : lib_env } )

# Select recursively the sources
sources= []
ui_sources= []
for d in ['base','viewer']:
    sources+= lib_env.ALEAGlob('*.cpp', dir= d)
    if d == 'base' and platform.name != 'win32':
        sources= filter( lambda x: 'trayicon' not in x, sources )

    ui_sources+= lib_env.ALEAGlob('*.ui',dir=d+'/interface')

ui_headers= lib_env.Uic4(ui_sources)
lib_env.ALEAIncludes( "plantgl/gui", ui_headers )

#print map(str,ui)

# Add defines to export symbols on Windows
DEFINES= list(lib_env['CPPDEFINES'])
DEFINES.append('VIEW_MAKEDLL')

# Link with the following libraries
LIBRARIES = list( lib_env['LIBS'] )
LIBRARIES.extend( ['pgltool','pglmath','pglsg','pglalgo'] )

lib_env.ALEALibrary( "pglgui",
                     sources, 
                     CPPDEFINES = DEFINES, 
                     LIBS = LIBRARIES )

# Build the viewer program
SConscript( 'exe/SConscript', exports = { "env" : lib_env } )

