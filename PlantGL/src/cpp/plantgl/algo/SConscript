# -*-python-*-
import os
pj= os.path.join

Import( "env" )

# 1. Call other SConscript files in sub directories and build the library

lib_env= env.Clone()
lib_env.AppendUnique(CPPDEFINES= 'ALGO_MAKEDLL')

qt_version = int(lib_env['QT_VERSION'])
if qt_version == 4:
    lib_env.EnableQt4Modules( [ 'QtCore', 'QtGui', 'QtOpenGL' ])
	

includes= lib_env.ALEAGlob('*.h')
lib_env.ALEAIncludes( "plantgl/algo", includes )

dirs=lib_env.ALEAGlob('SConscript','*') 
dirs= filter(lambda x: 'codec' not in x, dirs)

# install headers
lib_env.SConscript( dirs, exports = { "env" : lib_env } )

# sources
sources= lib_env.ALEAGlob('*.cpp', dir = '*')
# To avoid pre-generated files inclusion
sources= filter( lambda x: 'scne_scanner' not in x, sources )

# install headers and retrieve sources generated by flex/bison
sources+= lib_env.SConscript('codec/SConscript', exports = { "env" : lib_env } )

# Link with the following libraries
LIBRARIES = list( lib_env['LIBS'] )
LIBRARIES.extend( ['pgltool','pglmath','pglsg'] )
if lib_env["WITH_CGAL"]:
    LIBRARIES.append( lib_env['cgal_libs'] )

lib_env.ALEALibrary( "pglalgo",
                     sources, 
                     LIBS = LIBRARIES )


