# -*-python-*-
from openalea.sconsx.config import BisonFlex
import os
pj= os.path.join

Import( "env" )

# 1. Select the headers and sources

includes= env.ALEAGlob('*.h')

BUILD_BISON = False 
BUILD_BISON = True
if BUILD_BISON:
    src= BisonFlex( env, 
                "scne_parser.y", 
                "scne_scanner.l", 
                "scne_yy" )

    # simple flatten implementation
    if env['compiler'] == 'mingw':
      CXXFLAGS= env['CXXFLAGS']+['-fno-inline']
      bison_obj= env.SharedObject(src[ 0 ], CXXFLAGS= CXXFLAGS)
    else:
      bison_obj= env.SharedObject(src[ 0 ])

    sources= [str( src[ 1][ 0 ] )]
else: 
    sources = ['scne_parser.cpp', 'scne_scanner.cc']

if BUILD_BISON:
  if env.get('BISON_HPP',False):
    includes.append( 'scne_parser.hpp' )
  else:
    includes.append( 'scne_parser.cpp.h' )
else:
    includes.append( 'scne_parser.hpp' )

# 2. Build and install the library/headers

inc= env.ALEAIncludes( "plantgl/algo/codec", includes )

sources= map(lambda x: pj('codec',x),sources)

if BUILD_BISON:
    sources.append(bison_obj)

Return('sources')

