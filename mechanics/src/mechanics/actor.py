# -*- python -*-
# -*- coding: latin-1 -*-
#
#       actor : mechanics package
#
#       Copyright or © or Copr. 2006 INRIA - CIRAD - INRA  
#
#       File author(s): Jerome Chopard <jerome.chopard@sophia.inria.fr>
#
#       Distributed under the Cecill-C License.
#       See accompanying file LICENSE.txt or copy at
#           http://www.cecill.info/licences/Licence_CeCILL-C_V1-en.html
# 
#       VPlants WebSite : https://gforge.inria.fr/projects/vplants/
#

__doc__ = """
This module provide an interface for mechanical objects that develop
some forces
"""

__license__= "Cecill-C"
__revision__=" $Id: spring.py 8942 2010-05-19 17:47:04Z chopard $ "

class MechanicalActor (object) :
	"""Interface for all actors objects
	
	defines a unique mandatory method : :func:`assign_forces`
	"""
	def assign_forces (self, forces, state, t = None) :
		"""Compute local forces and insert them into forces
		
		Compute local forces generated by this actor
		according to current state.
		
		:Parameters:
		 - `forces` (array of float) - an array that store force vectors
		 - `state` (array of float) - current position and velocity of points
		 - `t` (float) - current time
		
		:Return: None, modify forces in place
		"""
		raise NotImplementedError
	
	def assign_jacobian (self, jacobian, state, t = None) :
		"""Compute jacobian contribution of this actor
		
		:Parameters:
		 - `jacobian` (array of float) - an array that store jacobian
		 - `state` (array of float) - current position and velocity of points
		 - `t` (float) - current time
		
		:Return: None, modify jacobian in place
		"""
		raise NotImplementedError

