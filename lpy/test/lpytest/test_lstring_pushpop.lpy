import openalea.lpy.__lpyfuture__
reload (openalea.lpy.__lpyfuture__)
from openalea.lpy.__lpyfuture__ import *

iterbackupcreation  = 1
iterbackupretrieval = 9

@enable_string_pushpop
def EndEach(lstring):
    if getIterationNb() == iterbackupcreation:
        print 'push', lstring
        pushString('test')
    elif getIterationNb() == iterbackupretrieval:
        print 'pop', popString('test'), 'instead of',lstring

def End(lstring):
  print 'End', len(lstring),  lstring
  assert len(lstring) == 1

Axiom: A

derivation length: 10
production:

A :
  if getIterationNb() > iterbackupcreation: produce FFA

interpretation:


endlsystem
###### INITIALISATION ######

__lpy_code_version__ = 1.1

def __initialiseContext__(context):
	context.options.setSelection('Early return when no matching',0)
