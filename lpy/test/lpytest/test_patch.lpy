Axiom: F ,(2) &(90) @g(patch2)

derivation length: 1
production:


interpretation:


endlsystem
###### INITIALISATION ######

def __initialiseContext__(context):
	import openalea.plantgl.all as pgl
	patch = pgl.NurbsPatch(
	    pgl.Point4Matrix([[(-0.0872235, 0.108294, 0.108405, 1), (-0.0228826, 0.0636999, 0.088239, 1), (0.105476, -0.0146332, 0.00723839, 1), (0.181186, 0.0174184, 0.1885, 1)], [(-0.218597, -0.00734951, 0.301025, 1), (-0.0945879, -0.159298, 0.171369, 1), (0.323672, -0.221406, 0.371153, 1), (-0.0436351, 0.188744, 0.770578, 1)], [(-0.378016, 0.00307767, 0.675357, 1), (-0.1791, -0.395736, 0.705767, 1), (0.0188319, -0.209439, 1.1842, 1), (0.0547503, -0.205343, 1.01584, 1)], [(-0.921095, 0.470563, 0.967642, 1), (-0.118563, 0.292663, 1.37176, 1), (0.249932, -0.00609451, 1.185, 1), (0.793334, -0.238111, 0.76074, 1)]]) , 
)
	patch.name = "patch"
	
	import openalea.plantgl.all as pgl
	Curve2D = pgl.NurbsCurve2D(
	    ctrlPointList = pgl.Point3Array([(-0.5, 0, 1),(0.0883131, 0.270916, 1),(0.166667, 0, 1),(0.5, 0, 1)]) , 
)
	Curve2D.name = "Curve2D"
	
	import openalea.plantgl.all as pgl
	Function = pgl.NurbsCurve2D(
	    ctrlPointList = pgl.Point3Array([(0, 0, 1),(0.317397, 0.298805, 1),(0.706508, 0.282869, 1),(1, 0, 1)]) , 
)
	Function.name = "Function"
	
	patch2 = pgl.NurbsPatch(
	    pgl.Point4Matrix([[(0.148787, 0.0902601, 0.137094, 1), (0.166667, 0, 0, 1), (-0.166667, 0, 0, 1), (-0.3952, 0.00117756, 0.231392, 1)], [(0.371205, -0.016256, 0.389458, 1), (0.175647, 0.526748, 0.491965, 1), (-0.142002, 0.709818, 0.638349, 1), (-0.605368, 0.0168745, 0.465848, 1)], [(0.5, 0, 0.666667, 1), (0.0730796, 0.0685168, 0.957737, 1), (-0.336378, -0.0199403, 0.752124, 1), (-0.70793, 0.00540139, 0.855313, 1)], [(0.240755, 0.0693775, 1.02372, 1), (0.112798, 0.00903068, 1.1565, 1), (-0.114356, -0.0211023, 1.19514, 1), (-0.303339, -0.0586492, 1.15144, 1)]]) , 
)
	patch2.name = "patch2"
	
	NurbsPatch = pgl.NurbsPatch(
	    pgl.Point4Matrix([[(0.5, 0, 0, 1), (0.166667, 0, 0, 1), (-0.166667, 0, 0, 1), (-0.5, 0, 0, 1)], [(0.5, 0, 0.333333, 1), (0.166667, 0, 0.333333, 1), (-0.166667, 0, 0.333333, 1), (-0.5, 0, 0.333333, 1)], [(0.5, 0, 0.666667, 1), (0.166667, 0, 0.666667, 1), (-0.166667, 0, 0.666667, 1), (-0.5, 0, 0.666667, 1)], [(0.5, 0, 1, 1), (0.166667, 0, 1, 1), (-0.166667, 0, 1, 1), (-0.5, 0, 1, 1)]]) , 
)
	NurbsPatch.name = "NurbsPatch"
	
	parameterset = [('parameters1',[('NurbsPatch',patch),('Curve2D',Curve2D),('Function',Function),('NurbsPatch',patch2),('NurbsPatch',NurbsPatch)]),]
	context["__parameterset__"] = parameterset
	context["patch"] = patch
	context["Curve2D"] = Curve2D
	context["Function"] = pgl.QuantisedFunction(Function)
	context["patch2"] = patch2
	context["NurbsPatch"] = NurbsPatch
