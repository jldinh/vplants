
# This file has been generated at Wed Dec 14 16:22:38 2011

from openalea.core import *


__name__ = 'phyllotaxis_analysis'

__editable__ = True
__description__ = ''
__license__ = 'CeCILL-C'
__url__ = 'http://openalea.gforge.inria.fr'
__alias__ = []
__version__ = 'VPlants.Phyllotaxis_Analysis.0'
__authors__ = ''
__institutes__ = None
__icon__ = ''


__all__ = ['theoretical_divergence_angles_theoretical_divergence_angles', '_62270224', 'codeSequence_codeSequence', '_114482640', 'antiCurrentWise_antiCurrentWise', 'extractSeq', 'readSeqFile_readSeqFile', 'extractSeqeunces_extractSequences', 'choices_choices', 'is_nadmissible_isNadmissible', 'readCSVDataFile_readCSVFile', 'invalidateSeq_invalidateSeq']



theoretical_divergence_angles_theoretical_divergence_angles = Factory(name='theoretical_divergence_angles',
                authors=' (wralea authors)',
                description='',
                category='Unclassified',
                nodemodule='theoretical_divergence_angles',
                nodeclass='theoretical_divergence_angles',
                inputs=[{'interface': IInt, 'name': 'int1', 'value': None, 'desc': ''}, {'interface': IInt, 'name': 'int2', 'value': None, 'desc': ''}],
                outputs=[{'interface': ITuple, 'name': 'OUT1', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




_62270224 = CompositeNodeFactory(name='demo_codeSeq',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('phyllotaxis_analysis', 'codeSequence'),
   3: ('openalea.data structure.list', 'list'),
   4: ('openalea.data structure', 'int'),
   5: ('openalea.data structure', 'float'),
   6: ('openalea.data structure.dict', 'dict'),
   7: ('openalea.data structure', 'float'),
   8: ('openalea.data structure', 'float')},
                             elt_connections={  10022160: (8, 0, 2, 5),
   10022172: (7, 0, 2, 4),
   10022184: (6, 0, 2, 3),
   10022196: (5, 0, 2, 2),
   10022208: (4, 0, 2, 1),
   10022220: (3, 0, 2, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'codeSequence',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x03A80190> : "codeSequence"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -101.21785165757012,
         'posy': -68.449482415910722,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'SequenceOfMeasuredAngles',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x06A2ED90> : "list"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -407.05596457972439,
         'posy': -174.76463595551684,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'maxInversion',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x06A21170> : "int"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -257.04965205123921,
         'posy': -174.03644997236876,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'CanonicalAngle',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x06A21030> : "float"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -170.39552005662881,
         'posy': -176.22100792181269,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': 'dictionaryOfIntervals',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x043B7670> : "dict"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -67.721296432762742,
         'posy': -176.22100792181269,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': '10.4',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x06A21030> : "float"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 75.003156264242619,
         'posy': -175.49282193866475,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': '0.1',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x06A21030> : "float"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 140.53989474756153,
         'posy': -174.76463595551672,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [],
   3: [  (  0,
            '[120, 145, 280, 220, 270, 150, 145, 115, 135, 280, 225, 70, 240, 260, 145, 125, 285, 225, 260, 285, 235, 260, 145]')],
   4: [(0, '3')],
   5: [(0, '137.5')],
   6: [  (  0,
            '{137.5: [104, 170], 222.5: [195, 255], 52.5: [5, 79], 275: [241, 308], 85: [57, 118], 190: [156, 217], 327.5: [294, 14]}')],
   7: [(0, '10.4')],
   8: [(0, '0.050000000000000003')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-101.21785165757012, -68.449482415910722],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-407.05596457972439, -174.76463595551684],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-257.04965205123921, -174.03644997236876],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [-170.39552005662881, -176.22100792181269],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [-67.721296432762742, -176.22100792181269],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [75.003156264242619, -175.49282193866475],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [140.53989474756153, -174.76463595551672],
         'useUserColor': False,
         'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




codeSequence_codeSequence = Factory(name='codeSequence',
                authors=' (wralea authors)',
                description='',
                category='Unclassified',
                nodemodule='codeSequence',
                nodeclass='codeSequence',
                inputs=[{'interface': ISequence, 'name': 'measuredAngles', 'value': None, 'desc': ''}, {'interface': IInt, 'name': 'maxInv', 'value': None, 'desc': ''}, {'interface': IFloat, 'name': 'canonicalAngle', 'value': None, 'desc': ''}, {'interface': IDict, 'name': 'intervalDict', 'value': None, 'desc': ''}, {'interface': IFloat, 'name': 'kappa', 'value': None, 'desc': ''}, {'interface': None, 'name': 'confidence', 'value': None, 'desc': ''}],
                outputs=[{'interface': ISequence, 'name': 'treesIndex', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




_114482640 = CompositeNodeFactory(name='demo_analyszeFile',
                             description='Reads and analyzes all sequences saved in a file',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('phyllotaxis_analysis', 'readSeqFile'),
   3: ('phyllotaxis_analysis', 'codeSequence'),
   4: ('openalea.python method', 'getitem'),
   5: ('openalea.data structure', 'int'),
   6: ('openalea.data structure', 'float'),
   7: ('openalea.data structure.dict', 'dict'),
   8: ('openalea.data structure', 'float'),
   9: ('openalea.data structure', 'float'),
   10: ('phyllotaxis_analysis', 'extractSequences'),
   11: ('openalea.data structure', 'int')},
                             elt_connections={  10019560: (4, 0, 10, 1),
   10019572: (4, 0, 3, 0),
   10019584: (6, 0, 3, 2),
   10019596: (5, 0, 10, 2),
   10019608: (11, 0, 4, 1),
   10019620: (3, 0, 10, 0),
   10019632: (2, 0, 4, 0),
   10019644: (9, 0, 3, 5),
   10019656: (8, 0, 3, 4),
   10019668: (7, 0, 3, 3),
   10019680: (5, 0, 3, 1),
   10019692: (6, 0, 10, 3)},
                             elt_data={  2: {  'block': False,
         'caption': 'readSeqFile',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x03B62B70> : "readSeqFile"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -122.08403589539176,
         'posy': -179.30238033048261,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'codeSequence',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x03B22FF0> : "codeSequence"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -45.648063855417021,
         'posy': 50.968380574640946,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'getitem',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x03EEAF70> : "getitem"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -64.930159559356497,
         'posy': -113.62777922887391,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': '3',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x06AB2F90> : "int"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -201.47986424908612,
         'posy': -54.61858698181706,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': '137.5',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x06AB2ED0> : "float"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -114.82573225447572,
         'posy': -56.803144931260988,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': 'dictionaryOfIntervals',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x044B7630> : "dict"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -12.151508630609655,
         'posy': -56.803144931260988,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': '10.4',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x06AB2ED0> : "float"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 130.57294406639562,
         'posy': -56.07495894811305,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': '0.1',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x06AB2ED0> : "float"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 196.10968254971453,
         'posy': -55.346772964965027,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'extractSequences',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x03B62B30> : "extractSequences"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -210.08283222224304,
          'posy': 128.97733227173262,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   11: {  'block': False,
          'caption': '0',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x06AB2F90> : "int"',
          'hide': True,
          'id': 11,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -9.989255316824071,
          'posy': -180.43092416013485,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(0, "'C:/Documents and Settings/yrefahi/Bureau/MutantWild.seq'")],
   3: [],
   4: [],
   5: [(0, '3')],
   6: [(0, '137.5')],
   7: [  (  0,
            '{137.5: [104, 170], 222.5: [195, 255], 52.5: [5, 79], 275: [241, 308], 85: [57, 118], 190: [156, 217], 327.5: [294, 14]}')],
   8: [(0, '10.4')],
   9: [(0, '0.050000000000000003')],
   10: [],
   11: [(0, '0')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {'position': [-122.08403589539176, -179.30238033048261], 'userColor': None, 'useUserColor': False},
   3: {'useUserColor': False, 'position': [-45.648063855417021, 50.968380574640946], 'userColor': None},
   4: {'position': [-64.930159559356497, -113.62777922887391], 'userColor': None, 'useUserColor': False},
   5: {'useUserColor': False, 'position': [-201.47986424908612, -54.61858698181706], 'userColor': None},
   6: {'useUserColor': False, 'position': [-114.82573225447572, -56.803144931260988], 'userColor': None},
   7: {'useUserColor': False, 'position': [-12.151508630609655, -56.803144931260988], 'userColor': None},
   8: {'useUserColor': False, 'position': [130.57294406639562, -56.07495894811305], 'userColor': None},
   9: {'useUserColor': False, 'position': [196.10968254971453, -55.346772964965027], 'userColor': None},
   10: {'useUserColor': False, 'position': [-210.08283222224304, 128.97733227173262], 'userColor': None},
   11: {'position': [-9.989255316824071, -180.43092416013485], 'userColor': None, 'useUserColor': False},
   '__in__': {'position': [0, 0], 'userColor': None, 'useUserColor': True},
   '__out__': {'position': [0, 0], 'userColor': None, 'useUserColor': True}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




antiCurrentWise_antiCurrentWise = Factory(name='antiCurrentWise',
                authors=' (wralea authors)',
                description='Reverses the orientation of input sequence',
                category='Unclassified',
                nodemodule='antiCurrentWise',
                nodeclass='antiCurrentWise',
                inputs=[{'interface': None, 'name': 'measuredSeq', 'value': None, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'reversedSeq', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




extractSeq = CompositeNodeFactory(name='extractSeq',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('phyllotaxis_analysis', 'codeSequence'),
   3: ('openalea.data structure.list', 'list'),
   4: ('openalea.data structure', 'int'),
   5: ('openalea.data structure', 'float'),
   6: ('openalea.data structure.dict', 'dict'),
   7: ('openalea.data structure', 'float'),
   8: ('openalea.data structure', 'float'),
   9: ('phyllotaxis_analysis', 'extractSequences')},
                             elt_connections={  10019584: (3, 0, 2, 0),
   10019596: (4, 0, 9, 2),
   10019608: (2, 0, 9, 0),
   10019620: (3, 0, 9, 1),
   10019632: (5, 0, 9, 3),
   10019644: (6, 0, 2, 3),
   10019656: (4, 0, 2, 1),
   10019668: (5, 0, 2, 2),
   10019680: (8, 0, 2, 5),
   10019692: (7, 0, 2, 4)},
                             elt_data={  2: {  'block': False,
         'caption': 'codeSequence',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x03B22FB0> : "codeSequence"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -101.21785165757012,
         'posy': -68.449482415910722,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'SequenceOfMeasuredAngles',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x06ADAB90> : "list"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -407.05596457972439,
         'posy': -174.76463595551684,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': '3',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x06AB1F50> : "int"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -257.04965205123921,
         'posy': -174.03644997236876,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': '137.5',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x06AB1E90> : "float"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -170.39552005662881,
         'posy': -176.22100792181269,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': 'dictionaryOfIntervals',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x044B55F0> : "dict"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -67.721296432762742,
         'posy': -176.22100792181269,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': '10.4',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x06AB1E90> : "float"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 75.003156264242619,
         'posy': -175.49282193866475,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': '0.1',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x06AB1E90> : "float"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 140.53989474756153,
         'posy': -174.76463595551672,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': 'extractSequences',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x03B61B10> : "extractSequences"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -265.65262002439613,
         'posy': 9.5594692811809274,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [],
   3: [  (  0,
            '[120, 145, 280, 220, 270, 150, 145, 115, 135, 280, 225, 70, 240, 260, 145, 125, 285, 225, 260, 285, 235, 260, 145]')],
   4: [(0, '3')],
   5: [(0, '137.5')],
   6: [  (  0,
            '{137.5: [104, 170], 222.5: [195, 255], 52.5: [5, 79], 275: [241, 308], 85: [57, 118], 190: [156, 217], 327.5: [294, 14]}')],
   7: [(0, '10.4')],
   8: [(0, '0.050000000000000003')],
   9: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-101.21785165757012, -68.449482415910722],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-407.05596457972439, -174.76463595551684],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-257.04965205123921, -174.03644997236876],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [-170.39552005662881, -176.22100792181269],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [-67.721296432762742, -176.22100792181269],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [75.003156264242619, -175.49282193866475],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [140.53989474756153, -174.76463595551672],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-265.65262002439613, 9.5594692811809274],
         'useUserColor': False,
         'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




readSeqFile_readSeqFile = Factory(name='readSeqFile',
                authors=' (wralea authors)',
                description='read a file of measured sequences',
                category='data i/o',
                nodemodule='readSeqFile',
                nodeclass='readSeqFile',
                inputs=[{'interface': IFileStr, 'name': 'fileName', 'value': None, 'desc': ''}],
                outputs=[{'interface': ISequence, 'name': 'listOfLists', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




extractSeqeunces_extractSequences = Factory(name='extractSequences',
                authors=' (wralea authors)',
                description='',
                category='Unclassified',
                nodemodule='extractSeqeunces',
                nodeclass='extractSequences',
                inputs=[{'interface': ISequence, 'name': 'treeIndexes', 'value': None, 'desc': ''}, {'interface': ISequence, 'name': 'measuredSeq', 'value': None, 'desc': ''}, {'interface': IInt, 'name': 'maxInversion', 'value': None, 'desc': ''}, {'interface': IFloat, 'name': 'canonicalAngle', 'value': None, 'desc': ''}],
                outputs=[{'interface': ISequence, 'name': 'prediction', 'desc': ''}, {'interface': ISequence, 'name': 'notExplained', 'desc': ''}, {'interface': ISequence, 'name': 'permutations', 'desc': ''}, {'interface': ISequence, 'name': 'invalides', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




choices_choices = Factory(name='choices',
                authors=' (wralea authors)',
                description='',
                category='Unclassified',
                nodemodule='choices',
                nodeclass='choices',
                inputs=[{'interface': IFloat, 'name': 'angle', 'value': None, 'desc': ''}, {'interface': IDict, 'name': 'intervalsDict', 'value': None, 'desc': ''}],
                outputs=[{'interface': ITuple, 'name': 'OUT1', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




is_nadmissible_isNadmissible = Factory(name='isNadmissible',
                authors=' (wralea authors)',
                description='',
                category='Unclassified',
                nodemodule='is_nadmissible',
                nodeclass='isNadmissible',
                inputs=[{'interface': ITuple, 'name': 'theoreticalAngles', 'value': None, 'desc': ''}, {'interface': IFloat, 'name': 'canonicalAngle', 'value': None, 'desc': ''}],
                outputs=[{'interface': IInt, 'name': 'n', 'desc': ''}, {'interface': ISequence, 'name': 'permutationsOrderIndexes', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




readCSVDataFile_readCSVFile = Factory(name='readCSVFile',
                authors=' (wralea authors)',
                description='',
                category='data i/o',
                nodemodule='readCSVDataFile',
                nodeclass='readCSVFile',
                inputs=[{'interface': IFileStr, 'name': 'file', 'value': None, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'listOfSeq', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




invalidateSeq_invalidateSeq = Factory(name='invalidateSeq',
                authors=' (wralea authors)',
                description='',
                category='Unclassified',
                nodemodule='invalidateSeq',
                nodeclass='invalidateSeq',
                inputs=[{'interface': ISequence, 'name': 'theoreticalAngles', 'value': None, 'desc': ''}, {'interface': ISequence, 'name': 'notExplained', 'value': None, 'desc': ''}, {'interface': IInt, 'name': 'maxInversion', 'value': None, 'desc': ''}],
                outputs=[],
                widgetmodule=None,
                widgetclass=None,
               )




