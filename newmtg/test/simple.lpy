import openalea.plantgl.all as pgl
import random
def bezier_leaf():
    Vector4 = pgl.Vector4
    l= []
    l.append( [ Vector4(-0.00170203,0.00487903,-0.00155362,1),
                Vector4(-0.00946124,0.0267487,0.00857975,1),
                Vector4(-0.0145598,0.0310762,0.0565383,1),
                Vector4(-0.00422035,0.0237428,0.101953,1) ])
    l.append( [ Vector4(3.9604e-05,0.0019996,5.60056e-06,1),
                Vector4(-0.00466331,0.00703859,0.0339818,1),
                Vector4(-0.00868596,0.00523895,0.076457,1),
                Vector4(0.00379859,0.00943444,0.154352,1) ])
    l.append([ Vector4( -3.9604e-05,-0.0019996,-5.60056e-06,1),
               Vector4(-0.00493527,0.00263947,0.0352765,1),
               Vector4(-0.00867663,0.00259947,0.0760139,1),
               Vector4(0.00447972,0.00923447,0.156651,1) ])
    l.append([Vector4(-0.00218137,-0.00475904,0.000459084,1),
              Vector4(-0.0120507,-0.0206578,0.0115464,1),
              Vector4(-0.0150292,-0.0230562,0.0604107,1),
              Vector4(-0.00608397,-0.0102688,0.102558,1)])
    
    matrix= pgl.Point4Matrix(4,4)
    for i,row in enumerate(l):
        for j,pt in enumerate(row):
            pt= pt*9
            pt.w=1
            matrix[i,j] = pt
    
    leaf= pgl.Scaled(pgl.Vector3(1,1,1)*1.5,pgl.BezierPatch(matrix,4,4))

    leaf.name='leaf'
    
    return leaf

leaf = bezier_leaf()

phi=120
alpha = 0
Axiom: PA

derivation length: 6
production:
A :
    global phi
    produce AN[/(phi)+ANL][/(2*phi)+ANL][/(3*phi)+ANL]AL
    phi+=20

N:
  a0 = 120* random.random()
  a1= 120+a0
  a2 = a1+120
  a3=a2+120
  produce N[/(a1)+L][/(a2)+L][/(a3)+L]N


homomorphism:
N:
   produce ;(1)F
   
L:
   produce ;(2)@g(leaf)

endlsystem
###### INITIALISATION ######

def __initialiseContext__(context):
	from openalea.plantgl.all import Material,Color3
	context.options.setSelection("Selection Required",0)
